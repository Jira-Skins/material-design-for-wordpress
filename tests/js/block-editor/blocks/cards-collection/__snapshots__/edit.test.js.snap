// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`blocks: material/cards-collection: Edit matches snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div
      aria-atomic="true"
      aria-live="polite"
      aria-relevant="additions text"
      class="a11y-speak-region"
      id="a11y-speak-polite"
      style="position: absolute;margin: -1px;padding: 0;height: 1px;width: 1px;overflow: hidden;clip: rect(1px, 1px, 1px, 1px);-webkit-clip-path: inset(50%);clip-path: inset(50%);border: 0;word-wrap: normal !important;"
    />
    <div
      aria-atomic="true"
      aria-live="assertive"
      aria-relevant="additions text"
      class="a11y-speak-region"
      id="a11y-speak-assertive"
      style="position: absolute;margin: -1px;padding: 0;height: 1px;width: 1px;overflow: hidden;clip: rect(1px, 1px, 1px, 1px);-webkit-clip-path: inset(50%);clip-path: inset(50%);border: 0;word-wrap: normal !important;"
    />
    <div>
      <div
        class="test"
      >
        <div
          class="masonry-grid layout-masonry"
          style="padding-left: 24px; padding-right: 24px;"
        >
          <div
            class="masonry-grid_column"
            style="margin-left: 24px; width: 25%;"
          >
            <div
              class="card-container"
              data-card-index="0"
              style="margin-bottom: 24px;"
            >
              <div
                class="mdc-card mtb-card"
                style="border-radius: 4px;"
              >
                <div
                  class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                  tabindex="0"
                >
                  <div
                    class="components-placeholder block-editor-media-placeholder is-small"
                  >
                    <iframe
                      aria-hidden="true"
                      aria-label="resize-listener"
                      frameborder="0"
                      src="about:blank"
                      style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                      tabindex="-1"
                    />
                    <div
                      class="components-placeholder__label"
                    >
                      Card Image selector
                    </div>
                    <div
                      class="components-placeholder__instructions"
                    >
                      To edit this block, you need permission to upload media.
                    </div>
                    <div
                      class="components-placeholder__fieldset"
                    />
                  </div>
                  <div
                    class="mtb-card__primary"
                  >
                    <h2
                      aria-label="Title goes here"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Title #1 goes here
                    </h2>
                    <h3
                      aria-label="Secondary text"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Secondary text #1
                    </h3>
                  </div>
                  <div
                    aria-label="Supporting text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Supporting text #1
                  </div>
                </div>
                <div
                  class="mdc-card__actions"
                >
                  <div
                    class="mdc-card__action-buttons"
                  >
                    <div>
                      <button
                        class="mdc-button mdc-card__action mdc-card__action--button"
                      >
                        <span
                          class="mdc-button__ripple"
                        />
                        <div
                          aria-label="Button text"
                          aria-multiline="true"
                          class="rich-text block-editor-rich-text__editable"
                          contenteditable="true"
                          role="textbox"
                          style="white-space: pre-wrap;"
                        >
                          Button text #1-1
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            class="masonry-grid_column"
            style="margin-left: 24px; width: 25%;"
          >
            <div
              class="card-container"
              data-card-index="1"
              style="margin-bottom: 24px;"
            >
              <div
                class="mdc-card mtb-card"
                style="border-radius: 4px;"
              >
                <div
                  class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                  tabindex="0"
                >
                  <div
                    class="components-placeholder block-editor-media-placeholder is-small"
                  >
                    <iframe
                      aria-hidden="true"
                      aria-label="resize-listener"
                      frameborder="0"
                      src="about:blank"
                      style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                      tabindex="-1"
                    />
                    <div
                      class="components-placeholder__label"
                    >
                      Card Image selector
                    </div>
                    <div
                      class="components-placeholder__instructions"
                    >
                      To edit this block, you need permission to upload media.
                    </div>
                    <div
                      class="components-placeholder__fieldset"
                    />
                  </div>
                  <div
                    class="mtb-card__primary"
                  >
                    <h2
                      aria-label="Title goes here"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Title #2 goes here
                    </h2>
                    <h3
                      aria-label="Secondary text"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Secondary text #2
                    </h3>
                  </div>
                  <div
                    aria-label="Supporting text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Supporting text #2
                  </div>
                </div>
                <div
                  class="mdc-card__actions"
                >
                  <div
                    class="mdc-card__action-buttons"
                  >
                    <div>
                      <button
                        class="mdc-button mdc-card__action mdc-card__action--button"
                      >
                        <span
                          class="mdc-button__ripple"
                        />
                        <div
                          aria-label="Button text"
                          aria-multiline="true"
                          class="rich-text block-editor-rich-text__editable"
                          contenteditable="true"
                          role="textbox"
                          style="white-space: pre-wrap;"
                        >
                          Button text #2-1
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            class="masonry-grid_column"
            style="margin-left: 24px; width: 25%;"
          >
            <div
              class="card-container"
              data-card-index="2"
              style="margin-bottom: 24px;"
            >
              <div
                class="mdc-card mtb-card"
                style="border-radius: 4px;"
              >
                <div
                  class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                  tabindex="0"
                >
                  <div
                    class="components-placeholder block-editor-media-placeholder is-small"
                  >
                    <iframe
                      aria-hidden="true"
                      aria-label="resize-listener"
                      frameborder="0"
                      src="about:blank"
                      style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                      tabindex="-1"
                    />
                    <div
                      class="components-placeholder__label"
                    >
                      Card Image selector
                    </div>
                    <div
                      class="components-placeholder__instructions"
                    >
                      To edit this block, you need permission to upload media.
                    </div>
                    <div
                      class="components-placeholder__fieldset"
                    />
                  </div>
                  <div
                    class="mtb-card__primary"
                  >
                    <h2
                      aria-label="Title goes here"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Title #3 goes here
                    </h2>
                    <h3
                      aria-label="Secondary text"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Secondary text #3
                    </h3>
                  </div>
                  <div
                    aria-label="Supporting text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Supporting text #3
                  </div>
                </div>
                <div
                  class="mdc-card__actions"
                >
                  <div
                    class="mdc-card__action-buttons"
                  >
                    <div>
                      <button
                        class="mdc-button mdc-card__action mdc-card__action--button"
                      >
                        <span
                          class="mdc-button__ripple"
                        />
                        <div
                          aria-label="Button text"
                          aria-multiline="true"
                          class="rich-text block-editor-rich-text__editable"
                          contenteditable="true"
                          role="textbox"
                          style="white-space: pre-wrap;"
                        >
                          Button text #3-1
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="test"
    >
      <div
        class="masonry-grid layout-masonry"
        style="padding-left: 24px; padding-right: 24px;"
      >
        <div
          class="masonry-grid_column"
          style="margin-left: 24px; width: 25%;"
        >
          <div
            class="card-container"
            data-card-index="0"
            style="margin-bottom: 24px;"
          >
            <div
              class="mdc-card mtb-card"
              style="border-radius: 4px;"
            >
              <div
                class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                tabindex="0"
              >
                <div
                  class="components-placeholder block-editor-media-placeholder is-small"
                >
                  <iframe
                    aria-hidden="true"
                    aria-label="resize-listener"
                    frameborder="0"
                    src="about:blank"
                    style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                    tabindex="-1"
                  />
                  <div
                    class="components-placeholder__label"
                  >
                    Card Image selector
                  </div>
                  <div
                    class="components-placeholder__instructions"
                  >
                    To edit this block, you need permission to upload media.
                  </div>
                  <div
                    class="components-placeholder__fieldset"
                  />
                </div>
                <div
                  class="mtb-card__primary"
                >
                  <h2
                    aria-label="Title goes here"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Title #1 goes here
                  </h2>
                  <h3
                    aria-label="Secondary text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Secondary text #1
                  </h3>
                </div>
                <div
                  aria-label="Supporting text"
                  aria-multiline="true"
                  class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                  contenteditable="true"
                  role="textbox"
                  style="white-space: pre-wrap;"
                >
                  Supporting text #1
                </div>
              </div>
              <div
                class="mdc-card__actions"
              >
                <div
                  class="mdc-card__action-buttons"
                >
                  <div>
                    <button
                      class="mdc-button mdc-card__action mdc-card__action--button"
                    >
                      <span
                        class="mdc-button__ripple"
                      />
                      <div
                        aria-label="Button text"
                        aria-multiline="true"
                        class="rich-text block-editor-rich-text__editable"
                        contenteditable="true"
                        role="textbox"
                        style="white-space: pre-wrap;"
                      >
                        Button text #1-1
                      </div>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          class="masonry-grid_column"
          style="margin-left: 24px; width: 25%;"
        >
          <div
            class="card-container"
            data-card-index="1"
            style="margin-bottom: 24px;"
          >
            <div
              class="mdc-card mtb-card"
              style="border-radius: 4px;"
            >
              <div
                class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                tabindex="0"
              >
                <div
                  class="components-placeholder block-editor-media-placeholder is-small"
                >
                  <iframe
                    aria-hidden="true"
                    aria-label="resize-listener"
                    frameborder="0"
                    src="about:blank"
                    style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                    tabindex="-1"
                  />
                  <div
                    class="components-placeholder__label"
                  >
                    Card Image selector
                  </div>
                  <div
                    class="components-placeholder__instructions"
                  >
                    To edit this block, you need permission to upload media.
                  </div>
                  <div
                    class="components-placeholder__fieldset"
                  />
                </div>
                <div
                  class="mtb-card__primary"
                >
                  <h2
                    aria-label="Title goes here"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Title #2 goes here
                  </h2>
                  <h3
                    aria-label="Secondary text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Secondary text #2
                  </h3>
                </div>
                <div
                  aria-label="Supporting text"
                  aria-multiline="true"
                  class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                  contenteditable="true"
                  role="textbox"
                  style="white-space: pre-wrap;"
                >
                  Supporting text #2
                </div>
              </div>
              <div
                class="mdc-card__actions"
              >
                <div
                  class="mdc-card__action-buttons"
                >
                  <div>
                    <button
                      class="mdc-button mdc-card__action mdc-card__action--button"
                    >
                      <span
                        class="mdc-button__ripple"
                      />
                      <div
                        aria-label="Button text"
                        aria-multiline="true"
                        class="rich-text block-editor-rich-text__editable"
                        contenteditable="true"
                        role="textbox"
                        style="white-space: pre-wrap;"
                      >
                        Button text #2-1
                      </div>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          class="masonry-grid_column"
          style="margin-left: 24px; width: 25%;"
        >
          <div
            class="card-container"
            data-card-index="2"
            style="margin-bottom: 24px;"
          >
            <div
              class="mdc-card mtb-card"
              style="border-radius: 4px;"
            >
              <div
                class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                tabindex="0"
              >
                <div
                  class="components-placeholder block-editor-media-placeholder is-small"
                >
                  <iframe
                    aria-hidden="true"
                    aria-label="resize-listener"
                    frameborder="0"
                    src="about:blank"
                    style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                    tabindex="-1"
                  />
                  <div
                    class="components-placeholder__label"
                  >
                    Card Image selector
                  </div>
                  <div
                    class="components-placeholder__instructions"
                  >
                    To edit this block, you need permission to upload media.
                  </div>
                  <div
                    class="components-placeholder__fieldset"
                  />
                </div>
                <div
                  class="mtb-card__primary"
                >
                  <h2
                    aria-label="Title goes here"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Title #3 goes here
                  </h2>
                  <h3
                    aria-label="Secondary text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Secondary text #3
                  </h3>
                </div>
                <div
                  aria-label="Supporting text"
                  aria-multiline="true"
                  class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                  contenteditable="true"
                  role="textbox"
                  style="white-space: pre-wrap;"
                >
                  Supporting text #3
                </div>
              </div>
              <div
                class="mdc-card__actions"
              >
                <div
                  class="mdc-card__action-buttons"
                >
                  <div>
                    <button
                      class="mdc-button mdc-card__action mdc-card__action--button"
                    >
                      <span
                        class="mdc-button__ripple"
                      />
                      <div
                        aria-label="Button text"
                        aria-multiline="true"
                        class="rich-text block-editor-rich-text__editable"
                        contenteditable="true"
                        role="textbox"
                        style="white-space: pre-wrap;"
                      >
                        Button text #3-1
                      </div>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`blocks: material/cards-collection: Edit matches snapshot when style props is \`grid\` 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div
      aria-atomic="true"
      aria-live="polite"
      aria-relevant="additions text"
      class="a11y-speak-region"
      id="a11y-speak-polite"
      style="position: absolute;margin: -1px;padding: 0;height: 1px;width: 1px;overflow: hidden;clip: rect(1px, 1px, 1px, 1px);-webkit-clip-path: inset(50%);clip-path: inset(50%);border: 0;word-wrap: normal !important;"
    />
    <div
      aria-atomic="true"
      aria-live="assertive"
      aria-relevant="additions text"
      class="a11y-speak-region"
      id="a11y-speak-assertive"
      style="position: absolute;margin: -1px;padding: 0;height: 1px;width: 1px;overflow: hidden;clip: rect(1px, 1px, 1px, 1px);-webkit-clip-path: inset(50%);clip-path: inset(50%);border: 0;word-wrap: normal !important;"
    />
    <div>
      <div
        class="test"
      >
        <div
          class="mdc-layout-grid layout-grid"
          style="padding-left: 24px; padding-right: 24px;"
        >
          <div
            class="mdc-layout-grid__inner"
          >
            <div
              class="card-container mdc-layout-grid__cell--span-3"
              data-card-index="0"
            >
              <div
                class="mdc-card mtb-card"
                style="border-radius: 4px;"
              >
                <div
                  class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                  tabindex="0"
                >
                  <div
                    class="components-placeholder block-editor-media-placeholder is-small"
                  >
                    <iframe
                      aria-hidden="true"
                      aria-label="resize-listener"
                      frameborder="0"
                      src="about:blank"
                      style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                      tabindex="-1"
                    />
                    <div
                      class="components-placeholder__label"
                    >
                      Card Image selector
                    </div>
                    <div
                      class="components-placeholder__instructions"
                    >
                      To edit this block, you need permission to upload media.
                    </div>
                    <div
                      class="components-placeholder__fieldset"
                    />
                  </div>
                  <div
                    class="mtb-card__primary"
                  >
                    <h2
                      aria-label="Title goes here"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Title #1 goes here
                    </h2>
                    <h3
                      aria-label="Secondary text"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Secondary text #1
                    </h3>
                  </div>
                  <div
                    aria-label="Supporting text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Supporting text #1
                  </div>
                </div>
                <div
                  class="mdc-card__actions"
                >
                  <div
                    class="mdc-card__action-buttons"
                  >
                    <div>
                      <button
                        class="mdc-button mdc-card__action mdc-card__action--button"
                      >
                        <span
                          class="mdc-button__ripple"
                        />
                        <div
                          aria-label="Button text"
                          aria-multiline="true"
                          class="rich-text block-editor-rich-text__editable"
                          contenteditable="true"
                          role="textbox"
                          style="white-space: pre-wrap;"
                        >
                          Button text #1-1
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              class="card-container mdc-layout-grid__cell--span-3"
              data-card-index="1"
            >
              <div
                class="mdc-card mtb-card"
                style="border-radius: 4px;"
              >
                <div
                  class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                  tabindex="0"
                >
                  <div
                    class="components-placeholder block-editor-media-placeholder is-small"
                  >
                    <iframe
                      aria-hidden="true"
                      aria-label="resize-listener"
                      frameborder="0"
                      src="about:blank"
                      style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                      tabindex="-1"
                    />
                    <div
                      class="components-placeholder__label"
                    >
                      Card Image selector
                    </div>
                    <div
                      class="components-placeholder__instructions"
                    >
                      To edit this block, you need permission to upload media.
                    </div>
                    <div
                      class="components-placeholder__fieldset"
                    />
                  </div>
                  <div
                    class="mtb-card__primary"
                  >
                    <h2
                      aria-label="Title goes here"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Title #2 goes here
                    </h2>
                    <h3
                      aria-label="Secondary text"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Secondary text #2
                    </h3>
                  </div>
                  <div
                    aria-label="Supporting text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Supporting text #2
                  </div>
                </div>
                <div
                  class="mdc-card__actions"
                >
                  <div
                    class="mdc-card__action-buttons"
                  >
                    <div>
                      <button
                        class="mdc-button mdc-card__action mdc-card__action--button"
                      >
                        <span
                          class="mdc-button__ripple"
                        />
                        <div
                          aria-label="Button text"
                          aria-multiline="true"
                          class="rich-text block-editor-rich-text__editable"
                          contenteditable="true"
                          role="textbox"
                          style="white-space: pre-wrap;"
                        >
                          Button text #2-1
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              class="card-container mdc-layout-grid__cell--span-3"
              data-card-index="2"
            >
              <div
                class="mdc-card mtb-card"
                style="border-radius: 4px;"
              >
                <div
                  class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                  tabindex="0"
                >
                  <div
                    class="components-placeholder block-editor-media-placeholder is-small"
                  >
                    <iframe
                      aria-hidden="true"
                      aria-label="resize-listener"
                      frameborder="0"
                      src="about:blank"
                      style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                      tabindex="-1"
                    />
                    <div
                      class="components-placeholder__label"
                    >
                      Card Image selector
                    </div>
                    <div
                      class="components-placeholder__instructions"
                    >
                      To edit this block, you need permission to upload media.
                    </div>
                    <div
                      class="components-placeholder__fieldset"
                    />
                  </div>
                  <div
                    class="mtb-card__primary"
                  >
                    <h2
                      aria-label="Title goes here"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Title #3 goes here
                    </h2>
                    <h3
                      aria-label="Secondary text"
                      aria-multiline="true"
                      class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                      contenteditable="true"
                      role="textbox"
                      style="white-space: pre-wrap;"
                    >
                      Secondary text #3
                    </h3>
                  </div>
                  <div
                    aria-label="Supporting text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Supporting text #3
                  </div>
                </div>
                <div
                  class="mdc-card__actions"
                >
                  <div
                    class="mdc-card__action-buttons"
                  >
                    <div>
                      <button
                        class="mdc-button mdc-card__action mdc-card__action--button"
                      >
                        <span
                          class="mdc-button__ripple"
                        />
                        <div
                          aria-label="Button text"
                          aria-multiline="true"
                          class="rich-text block-editor-rich-text__editable"
                          contenteditable="true"
                          role="textbox"
                          style="white-space: pre-wrap;"
                        >
                          Button text #3-1
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="test"
    >
      <div
        class="mdc-layout-grid layout-grid"
        style="padding-left: 24px; padding-right: 24px;"
      >
        <div
          class="mdc-layout-grid__inner"
        >
          <div
            class="card-container mdc-layout-grid__cell--span-3"
            data-card-index="0"
          >
            <div
              class="mdc-card mtb-card"
              style="border-radius: 4px;"
            >
              <div
                class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                tabindex="0"
              >
                <div
                  class="components-placeholder block-editor-media-placeholder is-small"
                >
                  <iframe
                    aria-hidden="true"
                    aria-label="resize-listener"
                    frameborder="0"
                    src="about:blank"
                    style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                    tabindex="-1"
                  />
                  <div
                    class="components-placeholder__label"
                  >
                    Card Image selector
                  </div>
                  <div
                    class="components-placeholder__instructions"
                  >
                    To edit this block, you need permission to upload media.
                  </div>
                  <div
                    class="components-placeholder__fieldset"
                  />
                </div>
                <div
                  class="mtb-card__primary"
                >
                  <h2
                    aria-label="Title goes here"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Title #1 goes here
                  </h2>
                  <h3
                    aria-label="Secondary text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Secondary text #1
                  </h3>
                </div>
                <div
                  aria-label="Supporting text"
                  aria-multiline="true"
                  class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                  contenteditable="true"
                  role="textbox"
                  style="white-space: pre-wrap;"
                >
                  Supporting text #1
                </div>
              </div>
              <div
                class="mdc-card__actions"
              >
                <div
                  class="mdc-card__action-buttons"
                >
                  <div>
                    <button
                      class="mdc-button mdc-card__action mdc-card__action--button"
                    >
                      <span
                        class="mdc-button__ripple"
                      />
                      <div
                        aria-label="Button text"
                        aria-multiline="true"
                        class="rich-text block-editor-rich-text__editable"
                        contenteditable="true"
                        role="textbox"
                        style="white-space: pre-wrap;"
                      >
                        Button text #1-1
                      </div>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            class="card-container mdc-layout-grid__cell--span-3"
            data-card-index="1"
          >
            <div
              class="mdc-card mtb-card"
              style="border-radius: 4px;"
            >
              <div
                class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                tabindex="0"
              >
                <div
                  class="components-placeholder block-editor-media-placeholder is-small"
                >
                  <iframe
                    aria-hidden="true"
                    aria-label="resize-listener"
                    frameborder="0"
                    src="about:blank"
                    style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                    tabindex="-1"
                  />
                  <div
                    class="components-placeholder__label"
                  >
                    Card Image selector
                  </div>
                  <div
                    class="components-placeholder__instructions"
                  >
                    To edit this block, you need permission to upload media.
                  </div>
                  <div
                    class="components-placeholder__fieldset"
                  />
                </div>
                <div
                  class="mtb-card__primary"
                >
                  <h2
                    aria-label="Title goes here"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Title #2 goes here
                  </h2>
                  <h3
                    aria-label="Secondary text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Secondary text #2
                  </h3>
                </div>
                <div
                  aria-label="Supporting text"
                  aria-multiline="true"
                  class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                  contenteditable="true"
                  role="textbox"
                  style="white-space: pre-wrap;"
                >
                  Supporting text #2
                </div>
              </div>
              <div
                class="mdc-card__actions"
              >
                <div
                  class="mdc-card__action-buttons"
                >
                  <div>
                    <button
                      class="mdc-button mdc-card__action mdc-card__action--button"
                    >
                      <span
                        class="mdc-button__ripple"
                      />
                      <div
                        aria-label="Button text"
                        aria-multiline="true"
                        class="rich-text block-editor-rich-text__editable"
                        contenteditable="true"
                        role="textbox"
                        style="white-space: pre-wrap;"
                      >
                        Button text #2-1
                      </div>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            class="card-container mdc-layout-grid__cell--span-3"
            data-card-index="2"
          >
            <div
              class="mdc-card mtb-card"
              style="border-radius: 4px;"
            >
              <div
                class="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                tabindex="0"
              >
                <div
                  class="components-placeholder block-editor-media-placeholder is-small"
                >
                  <iframe
                    aria-hidden="true"
                    aria-label="resize-listener"
                    frameborder="0"
                    src="about:blank"
                    style="display: block; opacity: 0; position: absolute; top: 0px; left: 0px; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"
                    tabindex="-1"
                  />
                  <div
                    class="components-placeholder__label"
                  >
                    Card Image selector
                  </div>
                  <div
                    class="components-placeholder__instructions"
                  >
                    To edit this block, you need permission to upload media.
                  </div>
                  <div
                    class="components-placeholder__fieldset"
                  />
                </div>
                <div
                  class="mtb-card__primary"
                >
                  <h2
                    aria-label="Title goes here"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Title #3 goes here
                  </h2>
                  <h3
                    aria-label="Secondary text"
                    aria-multiline="true"
                    class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                    contenteditable="true"
                    role="textbox"
                    style="white-space: pre-wrap;"
                  >
                    Secondary text #3
                  </h3>
                </div>
                <div
                  aria-label="Supporting text"
                  aria-multiline="true"
                  class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                  contenteditable="true"
                  role="textbox"
                  style="white-space: pre-wrap;"
                >
                  Supporting text #3
                </div>
              </div>
              <div
                class="mdc-card__actions"
              >
                <div
                  class="mdc-card__action-buttons"
                >
                  <div>
                    <button
                      class="mdc-button mdc-card__action mdc-card__action--button"
                    >
                      <span
                        class="mdc-button__ripple"
                      />
                      <div
                        aria-label="Button text"
                        aria-multiline="true"
                        class="rich-text block-editor-rich-text__editable"
                        contenteditable="true"
                        role="textbox"
                        style="white-space: pre-wrap;"
                      >
                        Button text #3-1
                      </div>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`blocks: material/cards-collection: Edit removes one card from the ui is being decreased by 1 1`] = `
<Edit
  attributes={
    Object {
      "cardsProps": Array [
        Object {
          "contentLayout": "text-under-media",
          "cornerRadius": 4,
          "displayActions": true,
          "displayImage": true,
          "displaySecondaryActionButton": false,
          "displaySecondaryText": true,
          "displaySupportingText": true,
          "displayTitle": true,
          "imageSourceUrl": "",
          "isImageEditMode": false,
          "outlined": false,
          "primaryActionButtonLabel": "Button text #1-1",
          "primaryActionButtonNewTab": false,
          "primaryActionButtonNoFollow": false,
          "primaryActionButtonUrl": "",
          "secondaryActionButtonLabel": "Button text #1-2",
          "secondaryActionButtonNewTab": false,
          "secondaryActionButtonNoFollow": false,
          "secondaryActionButtonUrl": "",
          "secondaryText": "Secondary text #1",
          "supportingText": "Supporting text #1",
          "title": "Title #1 goes here",
        },
        Object {
          "contentLayout": "text-under-media",
          "cornerRadius": 4,
          "displayActions": true,
          "displayImage": true,
          "displaySecondaryActionButton": false,
          "displaySecondaryText": true,
          "displaySupportingText": true,
          "displayTitle": true,
          "imageSourceUrl": "",
          "isImageEditMode": false,
          "outlined": false,
          "primaryActionButtonLabel": "Button text #2-1",
          "primaryActionButtonNewTab": false,
          "primaryActionButtonNoFollow": false,
          "primaryActionButtonUrl": "",
          "secondaryActionButtonLabel": "Button text #2-2",
          "secondaryActionButtonNewTab": false,
          "secondaryActionButtonNoFollow": false,
          "secondaryActionButtonUrl": "",
          "secondaryText": "Secondary text #2",
          "supportingText": "Supporting text #2",
          "title": "Title #2 goes here",
        },
        Object {
          "contentLayout": "text-under-media",
          "cornerRadius": 4,
          "displayActions": true,
          "displayImage": true,
          "displaySecondaryActionButton": false,
          "displaySecondaryText": true,
          "displaySupportingText": true,
          "displayTitle": true,
          "imageSourceUrl": "",
          "isImageEditMode": false,
          "outlined": false,
          "primaryActionButtonLabel": "Button text #3-1",
          "primaryActionButtonNewTab": false,
          "primaryActionButtonNoFollow": false,
          "primaryActionButtonUrl": "",
          "secondaryActionButtonLabel": "Button text #3-2",
          "secondaryActionButtonNewTab": false,
          "secondaryActionButtonNoFollow": false,
          "secondaryActionButtonUrl": "",
          "secondaryText": "Secondary text #3",
          "supportingText": "Supporting text #3",
          "title": "Title #3 goes here",
        },
      ],
      "columns": 4,
      "contentLayout": "text-under-media",
      "cornerRadius": 4,
      "displayActions": true,
      "displayImage": true,
      "displaySecondaryActionButton": true,
      "displaySecondaryText": true,
      "displaySupportingText": true,
      "displayTitle": true,
      "gutter": 16,
      "numberOfCards": 2,
      "outlined": true,
      "setter": [Function],
      "style": "masonry",
    }
  }
  className="test"
  setAttributes={[MockFunction]}
>
  <CardsCollectionInspectorControls
    attributes={
      Object {
        "cardsProps": Array [
          Object {
            "contentLayout": "text-under-media",
            "cornerRadius": 4,
            "displayActions": true,
            "displayImage": true,
            "displaySecondaryActionButton": false,
            "displaySecondaryText": true,
            "displaySupportingText": true,
            "displayTitle": true,
            "imageSourceUrl": "",
            "isImageEditMode": false,
            "outlined": false,
            "primaryActionButtonLabel": "Button text #1-1",
            "primaryActionButtonNewTab": false,
            "primaryActionButtonNoFollow": false,
            "primaryActionButtonUrl": "",
            "secondaryActionButtonLabel": "Button text #1-2",
            "secondaryActionButtonNewTab": false,
            "secondaryActionButtonNoFollow": false,
            "secondaryActionButtonUrl": "",
            "secondaryText": "Secondary text #1",
            "supportingText": "Supporting text #1",
            "title": "Title #1 goes here",
          },
          Object {
            "contentLayout": "text-under-media",
            "cornerRadius": 4,
            "displayActions": true,
            "displayImage": true,
            "displaySecondaryActionButton": false,
            "displaySecondaryText": true,
            "displaySupportingText": true,
            "displayTitle": true,
            "imageSourceUrl": "",
            "isImageEditMode": false,
            "outlined": false,
            "primaryActionButtonLabel": "Button text #2-1",
            "primaryActionButtonNewTab": false,
            "primaryActionButtonNoFollow": false,
            "primaryActionButtonUrl": "",
            "secondaryActionButtonLabel": "Button text #2-2",
            "secondaryActionButtonNewTab": false,
            "secondaryActionButtonNoFollow": false,
            "secondaryActionButtonUrl": "",
            "secondaryText": "Secondary text #2",
            "supportingText": "Supporting text #2",
            "title": "Title #2 goes here",
          },
          Object {
            "contentLayout": "text-under-media",
            "cornerRadius": 4,
            "displayActions": true,
            "displayImage": true,
            "displaySecondaryActionButton": false,
            "displaySecondaryText": true,
            "displaySupportingText": true,
            "displayTitle": true,
            "imageSourceUrl": "",
            "isImageEditMode": false,
            "outlined": false,
            "primaryActionButtonLabel": "Button text #3-1",
            "primaryActionButtonNewTab": false,
            "primaryActionButtonNoFollow": false,
            "primaryActionButtonUrl": "",
            "secondaryActionButtonLabel": "Button text #3-2",
            "secondaryActionButtonNewTab": false,
            "secondaryActionButtonNoFollow": false,
            "secondaryActionButtonUrl": "",
            "secondaryText": "Secondary text #3",
            "supportingText": "Supporting text #3",
            "title": "Title #3 goes here",
          },
        ],
        "columns": 4,
        "contentLayout": "text-under-media",
        "cornerRadius": 4,
        "displayActions": true,
        "displayImage": true,
        "displaySecondaryActionButton": true,
        "displaySecondaryText": true,
        "displaySupportingText": true,
        "displayTitle": true,
        "gutter": 16,
        "numberOfCards": 2,
        "outlined": true,
        "setter": [Function],
        "style": "masonry",
      }
    }
    className="test"
    setAttributes={[MockFunction]}
  >
    <IfBlockEditSelected(InspectorControlsFill) />
  </CardsCollectionInspectorControls>
  <div
    className="test"
  >
    <Cards
      cards={
        Array [
          <div
            className="card-container"
            data-card-index={0}
            onFocus={[Function]}
            style={
              Object {
                "marginBottom": "24px",
              }
            }
          >
            <VerticalCardLayout
              cardIndex={0}
              contentLayout="text-under-media"
              cornerRadius={4}
              displayActions={true}
              displayImage={true}
              displaySecondaryActionButton={false}
              displaySecondaryText={true}
              displaySupportingText={true}
              displayTitle={true}
              imageSourceUrl=""
              isEditMode={true}
              isImageEditMode={false}
              outlined={false}
              primaryActionButtonLabel="Button text #1-1"
              primaryActionButtonNewTab={false}
              primaryActionButtonNoFollow={false}
              primaryActionButtonUrl=""
              secondaryActionButtonLabel="Button text #1-2"
              secondaryActionButtonNewTab={false}
              secondaryActionButtonNoFollow={false}
              secondaryActionButtonUrl=""
              secondaryText="Secondary text #1"
              setAttributes={[MockFunction]}
              setter={[Function]}
              supportingText="Supporting text #1"
              title="Title #1 goes here"
            />
          </div>,
          <div
            className="card-container"
            data-card-index={1}
            onFocus={[Function]}
            style={
              Object {
                "marginBottom": "24px",
              }
            }
          >
            <VerticalCardLayout
              cardIndex={1}
              contentLayout="text-under-media"
              cornerRadius={4}
              displayActions={true}
              displayImage={true}
              displaySecondaryActionButton={false}
              displaySecondaryText={true}
              displaySupportingText={true}
              displayTitle={true}
              imageSourceUrl=""
              isEditMode={true}
              isImageEditMode={false}
              outlined={false}
              primaryActionButtonLabel="Button text #2-1"
              primaryActionButtonNewTab={false}
              primaryActionButtonNoFollow={false}
              primaryActionButtonUrl=""
              secondaryActionButtonLabel="Button text #2-2"
              secondaryActionButtonNewTab={false}
              secondaryActionButtonNoFollow={false}
              secondaryActionButtonUrl=""
              secondaryText="Secondary text #2"
              setAttributes={[MockFunction]}
              setter={[Function]}
              supportingText="Supporting text #2"
              title="Title #2 goes here"
            />
          </div>,
        ]
      }
      columns={4}
      gutter={16}
      style="masonry"
    >
      <Masonry
        breakpointCols={4}
        className="masonry-grid layout-masonry"
        columnAttrs={
          Object {
            "style": Object {
              "marginLeft": "24px",
            },
          }
        }
        columnClassName="masonry-grid_column"
        style={
          Object {
            "paddingLeft": "24px",
            "paddingRight": "24px",
          }
        }
      >
        <div
          className="masonry-grid layout-masonry"
          style={
            Object {
              "paddingLeft": "24px",
              "paddingRight": "24px",
            }
          }
        >
          <div
            className="masonry-grid_column"
            key="0"
            style={
              Object {
                "marginLeft": "24px",
                "width": "25%",
              }
            }
          >
            <div
              className="card-container"
              data-card-index={0}
              key="0"
              onFocus={[Function]}
              style={
                Object {
                  "marginBottom": "24px",
                }
              }
            >
              <VerticalCardLayout
                cardIndex={0}
                contentLayout="text-under-media"
                cornerRadius={4}
                displayActions={true}
                displayImage={true}
                displaySecondaryActionButton={false}
                displaySecondaryText={true}
                displaySupportingText={true}
                displayTitle={true}
                imageSourceUrl=""
                isEditMode={true}
                isImageEditMode={false}
                outlined={false}
                primaryActionButtonLabel="Button text #1-1"
                primaryActionButtonNewTab={false}
                primaryActionButtonNoFollow={false}
                primaryActionButtonUrl=""
                secondaryActionButtonLabel="Button text #1-2"
                secondaryActionButtonNewTab={false}
                secondaryActionButtonNoFollow={false}
                secondaryActionButtonUrl=""
                secondaryText="Secondary text #1"
                setAttributes={[MockFunction]}
                setter={[Function]}
                supportingText="Supporting text #1"
                title="Title #1 goes here"
              >
                <div
                  className="mdc-card mtb-card"
                  style={
                    Object {
                      "borderRadius": "4px",
                    }
                  }
                >
                  <div
                    className="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                    tabIndex={0}
                  >
                    <CardImage
                      cardIndex={0}
                      cardPrimaryProps={
                        Object {
                          "cardIndex": 0,
                          "displaySecondaryText": true,
                          "displayTitle": true,
                          "isEditMode": true,
                          "secondaryText": "Secondary text #1",
                          "setter": [Function],
                          "title": "Title #1 goes here",
                        }
                      }
                      contentLayout="text-under-media"
                      displayImage={true}
                      imageSourceUrl=""
                      isEditMode={true}
                      isImageEditMode={false}
                      setter={[Function]}
                      type="16-9"
                    >
                      <CardImageEdit
                        cardIndex={0}
                        cardPrimaryProps={
                          Object {
                            "cardIndex": 0,
                            "displaySecondaryText": true,
                            "displayTitle": true,
                            "isEditMode": true,
                            "secondaryText": "Secondary text #1",
                            "setter": [Function],
                            "title": "Title #1 goes here",
                          }
                        }
                        contentLayout="text-under-media"
                        displayImage={true}
                        imageSourceUrl=""
                        isEditMode={true}
                        isImageEditMode={false}
                        setter={[Function]}
                        type="16-9"
                      >
                        <WithSelect(WithFilters(MediaPlaceholder))
                          accept="image/*"
                          allowedTypes={
                            Array [
                              "image",
                            ]
                          }
                          labels={
                            Object {
                              "title": "Card Image selector",
                            }
                          }
                          multiple={false}
                          onSelect={[Function]}
                        >
                          <Component
                            accept="image/*"
                            allowedTypes={
                              Array [
                                "image",
                              ]
                            }
                            labels={
                              Object {
                                "title": "Card Image selector",
                              }
                            }
                            multiple={false}
                            onSelect={[Function]}
                          >
                            <WithFilters(MediaPlaceholder)
                              accept="image/*"
                              allowedTypes={
                                Array [
                                  "image",
                                ]
                              }
                              labels={
                                Object {
                                  "title": "Card Image selector",
                                }
                              }
                              multiple={false}
                              onSelect={[Function]}
                            >
                              <MediaPlaceholder
                                accept="image/*"
                                allowedTypes={
                                  Array [
                                    "image",
                                  ]
                                }
                                labels={
                                  Object {
                                    "title": "Card Image selector",
                                  }
                                }
                                multiple={false}
                                onSelect={[Function]}
                              >
                                <WithSelect(MediaUploadCheck)
                                  fallback={
                                    <Placeholder
                                      className="block-editor-media-placeholder"
                                      instructions="To edit this block, you need permission to upload media."
                                      label="Card Image selector"
                                    />
                                  }
                                >
                                  <Component
                                    fallback={
                                      <Placeholder
                                        className="block-editor-media-placeholder"
                                        instructions="To edit this block, you need permission to upload media."
                                        label="Card Image selector"
                                      />
                                    }
                                  >
                                    <MediaUploadCheck
                                      fallback={
                                        <Placeholder
                                          className="block-editor-media-placeholder"
                                          instructions="To edit this block, you need permission to upload media."
                                          label="Card Image selector"
                                        />
                                      }
                                      hasUploadPermissions={false}
                                    >
                                      <Placeholder
                                        className="block-editor-media-placeholder"
                                        instructions="To edit this block, you need permission to upload media."
                                        label="Card Image selector"
                                      >
                                        <div
                                          className="components-placeholder block-editor-media-placeholder"
                                        >
                                          <t
                                            onResize={[Function]}
                                          >
                                            <iframe
                                              aria-hidden={true}
                                              aria-label="resize-listener"
                                              frameBorder={0}
                                              src="about:blank"
                                              style={
                                                Object {
                                                  "display": "block",
                                                  "height": "100%",
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "overflow": "hidden",
                                                  "pointerEvents": "none",
                                                  "position": "absolute",
                                                  "top": 0,
                                                  "width": "100%",
                                                  "zIndex": -1,
                                                }
                                              }
                                              tabIndex={-1}
                                            />
                                          </t>
                                          <div
                                            className="components-placeholder__label"
                                          >
                                            <Icon />
                                            Card Image selector
                                          </div>
                                          <div
                                            className="components-placeholder__instructions"
                                          >
                                            To edit this block, you need permission to upload media.
                                          </div>
                                          <div
                                            className="components-placeholder__fieldset"
                                          />
                                        </div>
                                      </Placeholder>
                                    </MediaUploadCheck>
                                  </Component>
                                </WithSelect(MediaUploadCheck)>
                              </MediaPlaceholder>
                            </WithFilters(MediaPlaceholder)>
                          </Component>
                        </WithSelect(WithFilters(MediaPlaceholder))>
                      </CardImageEdit>
                    </CardImage>
                    <CardPrimary
                      cardIndex={0}
                      displaySecondaryText={true}
                      displayTitle={true}
                      isEditMode={true}
                      secondaryText="Secondary text #1"
                      setter={[Function]}
                      title="Title #1 goes here"
                    >
                      <div
                        className="mtb-card__primary"
                      >
                        <ForwardRef(RichTextWrapper)
                          className="mtb-card__title mdc-typography mdc-typography--headline6"
                          onChange={[Function]}
                          place={true}
                          placeholder="Title goes here"
                          tagName="h2"
                          value="Title #1 goes here"
                        >
                          <ForwardRef
                            __unstableDidAutomaticChange={false}
                            __unstableInputRule={[Function]}
                            __unstableIsCaretWithinFormattedText={false}
                            __unstableIsSelected={false}
                            __unstableMarkAutomaticChange={[Function]}
                            __unstableOnCreateUndoLevel={[Function]}
                            __unstableOnEnterFormattedText={[Function]}
                            __unstableOnExitFormattedText={[Function]}
                            blockIsSelected={false}
                            className="block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                            clientId={null}
                            disabled={false}
                            identifier={88}
                            onChange={[Function]}
                            onDelete={[Function]}
                            onEnter={[Function]}
                            onPaste={[Function]}
                            onSelectionChange={[Function]}
                            place={true}
                            placeholder="Title goes here"
                            tagName="h2"
                            value="Title #1 goes here"
                          >
                            <WithSafeTimeout(WithFormatTypes)
                              __unstableDidAutomaticChange={false}
                              __unstableInputRule={[Function]}
                              __unstableIsCaretWithinFormattedText={false}
                              __unstableIsSelected={false}
                              __unstableMarkAutomaticChange={[Function]}
                              __unstableOnCreateUndoLevel={[Function]}
                              __unstableOnEnterFormattedText={[Function]}
                              __unstableOnExitFormattedText={[Function]}
                              blockIsSelected={false}
                              className="block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                              clientId={null}
                              disabled={false}
                              forwardedRef={
                                Object {
                                  "current": <h2
                                    aria-label="Title goes here"
                                    aria-multiline="true"
                                    class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                    contenteditable="true"
                                    role="textbox"
                                    style="white-space: pre-wrap;"
                                  >
                                    Title #1 goes here
                                  </h2>,
                                }
                              }
                              identifier={88}
                              onChange={[Function]}
                              onDelete={[Function]}
                              onEnter={[Function]}
                              onPaste={[Function]}
                              onSelectionChange={[Function]}
                              place={true}
                              placeholder="Title goes here"
                              tagName="h2"
                              value="Title #1 goes here"
                            >
                              <WithFormatTypes
                                __unstableDidAutomaticChange={false}
                                __unstableInputRule={[Function]}
                                __unstableIsCaretWithinFormattedText={false}
                                __unstableIsSelected={false}
                                __unstableMarkAutomaticChange={[Function]}
                                __unstableOnCreateUndoLevel={[Function]}
                                __unstableOnEnterFormattedText={[Function]}
                                __unstableOnExitFormattedText={[Function]}
                                blockIsSelected={false}
                                className="block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                clearTimeout={[Function]}
                                clientId={null}
                                disabled={false}
                                forwardedRef={
                                  Object {
                                    "current": <h2
                                      aria-label="Title goes here"
                                      aria-multiline="true"
                                      class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                      contenteditable="true"
                                      role="textbox"
                                      style="white-space: pre-wrap;"
                                    >
                                      Title #1 goes here
                                    </h2>,
                                  }
                                }
                                identifier={88}
                                onChange={[Function]}
                                onDelete={[Function]}
                                onEnter={[Function]}
                                onPaste={[Function]}
                                onSelectionChange={[Function]}
                                place={true}
                                placeholder="Title goes here"
                                setTimeout={[Function]}
                                tagName="h2"
                                value="Title #1 goes here"
                              >
                                <RichText
                                  __unstableDidAutomaticChange={false}
                                  __unstableInputRule={[Function]}
                                  __unstableIsCaretWithinFormattedText={false}
                                  __unstableIsSelected={false}
                                  __unstableMarkAutomaticChange={[Function]}
                                  __unstableOnCreateUndoLevel={[Function]}
                                  __unstableOnEnterFormattedText={[Function]}
                                  __unstableOnExitFormattedText={[Function]}
                                  blockIsSelected={false}
                                  className="block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                  clearTimeout={[Function]}
                                  clientId={null}
                                  disabled={false}
                                  format="string"
                                  formatTypes={Array []}
                                  forwardedRef={
                                    Object {
                                      "current": <h2
                                        aria-label="Title goes here"
                                        aria-multiline="true"
                                        class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                        contenteditable="true"
                                        role="textbox"
                                        style="white-space: pre-wrap;"
                                      >
                                        Title #1 goes here
                                      </h2>,
                                    }
                                  }
                                  identifier={88}
                                  onChange={[Function]}
                                  onDelete={[Function]}
                                  onEnter={[Function]}
                                  onPaste={[Function]}
                                  onSelectionChange={[Function]}
                                  place={true}
                                  placeholder="Title goes here"
                                  setTimeout={[Function]}
                                  tagName="h2"
                                  value="Title #1 goes here"
                                >
                                  <BoundaryStyle
                                    forwardedRef={
                                      Object {
                                        "current": <h2
                                          aria-label="Title goes here"
                                          aria-multiline="true"
                                          class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                          contenteditable="true"
                                          role="textbox"
                                          style="white-space: pre-wrap;"
                                        >
                                          Title #1 goes here
                                        </h2>,
                                      }
                                    }
                                  />
                                  <InlineWarning
                                    forwardedRef={
                                      Object {
                                        "current": <h2
                                          aria-label="Title goes here"
                                          aria-multiline="true"
                                          class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                          contenteditable="true"
                                          role="textbox"
                                          style="white-space: pre-wrap;"
                                        >
                                          Title #1 goes here
                                        </h2>,
                                      }
                                    }
                                  />
                                  <WithBlockEditContext(Component)
                                    isSelected={false}
                                    onChange={[Function]}
                                    record={
                                      Object {
                                        "end": undefined,
                                        "formats": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "replacements": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "start": undefined,
                                        "text": "Title #1 goes here",
                                      }
                                    }
                                  >
                                    <Component
                                      blockName=""
                                      isSelected={false}
                                      onChange={[Function]}
                                      record={
                                        Object {
                                          "end": undefined,
                                          "formats": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "replacements": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "start": undefined,
                                          "text": "Title #1 goes here",
                                        }
                                      }
                                    >
                                      <WithSpokenMessages(WithInstanceId(Autocomplete))
                                        blockName=""
                                        completers={Array []}
                                        isSelected={false}
                                        onChange={[Function]}
                                        record={
                                          Object {
                                            "end": undefined,
                                            "formats": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "replacements": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "start": undefined,
                                            "text": "Title #1 goes here",
                                          }
                                        }
                                      >
                                        <WithInstanceId(Autocomplete)
                                          blockName=""
                                          completers={Array []}
                                          debouncedSpeak={[Function]}
                                          isSelected={false}
                                          onChange={[Function]}
                                          record={
                                            Object {
                                              "end": undefined,
                                              "formats": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "replacements": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "start": undefined,
                                              "text": "Title #1 goes here",
                                            }
                                          }
                                          speak={[Function]}
                                        >
                                          <Autocomplete
                                            blockName=""
                                            completers={Array []}
                                            debouncedSpeak={[Function]}
                                            instanceId={88}
                                            isSelected={false}
                                            onChange={[Function]}
                                            record={
                                              Object {
                                                "end": undefined,
                                                "formats": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "replacements": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "start": undefined,
                                                "text": "Title #1 goes here",
                                              }
                                            }
                                            speak={[Function]}
                                          >
                                            <bound Editable
                                              aria-activedescendant={null}
                                              aria-owns={null}
                                              onKeyDown={[Function]}
                                            >
                                              <h2
                                                aria-activedescendant={null}
                                                aria-label="Title goes here"
                                                aria-multiline={true}
                                                aria-owns={null}
                                                className="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                                contentEditable={true}
                                                onBlur={[Function]}
                                                onCompositionEnd={[Function]}
                                                onCompositionStart={[Function]}
                                                onFocus={[Function]}
                                                onInput={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseUp={[Function]}
                                                onPaste={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchStart={[Function]}
                                                role="textbox"
                                                style={
                                                  Object {
                                                    "whiteSpace": "pre-wrap",
                                                  }
                                                }
                                                suppressContentEditableWarning={true}
                                              />
                                            </bound Editable>
                                          </Autocomplete>
                                        </WithInstanceId(Autocomplete)>
                                      </WithSpokenMessages(WithInstanceId(Autocomplete))>
                                    </Component>
                                  </WithBlockEditContext(Component)>
                                </RichText>
                              </WithFormatTypes>
                            </WithSafeTimeout(WithFormatTypes)>
                          </ForwardRef>
                        </ForwardRef(RichTextWrapper)>
                        <ForwardRef(RichTextWrapper)
                          className="mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                          onChange={[Function]}
                          placeholder="Secondary text"
                          tagName="h3"
                          value="Secondary text #1"
                        >
                          <ForwardRef
                            __unstableDidAutomaticChange={false}
                            __unstableInputRule={[Function]}
                            __unstableIsCaretWithinFormattedText={false}
                            __unstableIsSelected={false}
                            __unstableMarkAutomaticChange={[Function]}
                            __unstableOnCreateUndoLevel={[Function]}
                            __unstableOnEnterFormattedText={[Function]}
                            __unstableOnExitFormattedText={[Function]}
                            blockIsSelected={false}
                            className="block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                            clientId={null}
                            disabled={false}
                            identifier={89}
                            onChange={[Function]}
                            onDelete={[Function]}
                            onEnter={[Function]}
                            onPaste={[Function]}
                            onSelectionChange={[Function]}
                            placeholder="Secondary text"
                            tagName="h3"
                            value="Secondary text #1"
                          >
                            <WithSafeTimeout(WithFormatTypes)
                              __unstableDidAutomaticChange={false}
                              __unstableInputRule={[Function]}
                              __unstableIsCaretWithinFormattedText={false}
                              __unstableIsSelected={false}
                              __unstableMarkAutomaticChange={[Function]}
                              __unstableOnCreateUndoLevel={[Function]}
                              __unstableOnEnterFormattedText={[Function]}
                              __unstableOnExitFormattedText={[Function]}
                              blockIsSelected={false}
                              className="block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                              clientId={null}
                              disabled={false}
                              forwardedRef={
                                Object {
                                  "current": <h3
                                    aria-label="Secondary text"
                                    aria-multiline="true"
                                    class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                    contenteditable="true"
                                    role="textbox"
                                    style="white-space: pre-wrap;"
                                  >
                                    Secondary text #1
                                  </h3>,
                                }
                              }
                              identifier={89}
                              onChange={[Function]}
                              onDelete={[Function]}
                              onEnter={[Function]}
                              onPaste={[Function]}
                              onSelectionChange={[Function]}
                              placeholder="Secondary text"
                              tagName="h3"
                              value="Secondary text #1"
                            >
                              <WithFormatTypes
                                __unstableDidAutomaticChange={false}
                                __unstableInputRule={[Function]}
                                __unstableIsCaretWithinFormattedText={false}
                                __unstableIsSelected={false}
                                __unstableMarkAutomaticChange={[Function]}
                                __unstableOnCreateUndoLevel={[Function]}
                                __unstableOnEnterFormattedText={[Function]}
                                __unstableOnExitFormattedText={[Function]}
                                blockIsSelected={false}
                                className="block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                clearTimeout={[Function]}
                                clientId={null}
                                disabled={false}
                                forwardedRef={
                                  Object {
                                    "current": <h3
                                      aria-label="Secondary text"
                                      aria-multiline="true"
                                      class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                      contenteditable="true"
                                      role="textbox"
                                      style="white-space: pre-wrap;"
                                    >
                                      Secondary text #1
                                    </h3>,
                                  }
                                }
                                identifier={89}
                                onChange={[Function]}
                                onDelete={[Function]}
                                onEnter={[Function]}
                                onPaste={[Function]}
                                onSelectionChange={[Function]}
                                placeholder="Secondary text"
                                setTimeout={[Function]}
                                tagName="h3"
                                value="Secondary text #1"
                              >
                                <RichText
                                  __unstableDidAutomaticChange={false}
                                  __unstableInputRule={[Function]}
                                  __unstableIsCaretWithinFormattedText={false}
                                  __unstableIsSelected={false}
                                  __unstableMarkAutomaticChange={[Function]}
                                  __unstableOnCreateUndoLevel={[Function]}
                                  __unstableOnEnterFormattedText={[Function]}
                                  __unstableOnExitFormattedText={[Function]}
                                  blockIsSelected={false}
                                  className="block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                  clearTimeout={[Function]}
                                  clientId={null}
                                  disabled={false}
                                  format="string"
                                  formatTypes={Array []}
                                  forwardedRef={
                                    Object {
                                      "current": <h3
                                        aria-label="Secondary text"
                                        aria-multiline="true"
                                        class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                        contenteditable="true"
                                        role="textbox"
                                        style="white-space: pre-wrap;"
                                      >
                                        Secondary text #1
                                      </h3>,
                                    }
                                  }
                                  identifier={89}
                                  onChange={[Function]}
                                  onDelete={[Function]}
                                  onEnter={[Function]}
                                  onPaste={[Function]}
                                  onSelectionChange={[Function]}
                                  placeholder="Secondary text"
                                  setTimeout={[Function]}
                                  tagName="h3"
                                  value="Secondary text #1"
                                >
                                  <BoundaryStyle
                                    forwardedRef={
                                      Object {
                                        "current": <h3
                                          aria-label="Secondary text"
                                          aria-multiline="true"
                                          class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                          contenteditable="true"
                                          role="textbox"
                                          style="white-space: pre-wrap;"
                                        >
                                          Secondary text #1
                                        </h3>,
                                      }
                                    }
                                  />
                                  <InlineWarning
                                    forwardedRef={
                                      Object {
                                        "current": <h3
                                          aria-label="Secondary text"
                                          aria-multiline="true"
                                          class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                          contenteditable="true"
                                          role="textbox"
                                          style="white-space: pre-wrap;"
                                        >
                                          Secondary text #1
                                        </h3>,
                                      }
                                    }
                                  />
                                  <WithBlockEditContext(Component)
                                    isSelected={false}
                                    onChange={[Function]}
                                    record={
                                      Object {
                                        "end": undefined,
                                        "formats": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "replacements": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "start": undefined,
                                        "text": "Secondary text #1",
                                      }
                                    }
                                  >
                                    <Component
                                      blockName=""
                                      isSelected={false}
                                      onChange={[Function]}
                                      record={
                                        Object {
                                          "end": undefined,
                                          "formats": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "replacements": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "start": undefined,
                                          "text": "Secondary text #1",
                                        }
                                      }
                                    >
                                      <WithSpokenMessages(WithInstanceId(Autocomplete))
                                        blockName=""
                                        completers={Array []}
                                        isSelected={false}
                                        onChange={[Function]}
                                        record={
                                          Object {
                                            "end": undefined,
                                            "formats": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "replacements": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "start": undefined,
                                            "text": "Secondary text #1",
                                          }
                                        }
                                      >
                                        <WithInstanceId(Autocomplete)
                                          blockName=""
                                          completers={Array []}
                                          debouncedSpeak={[Function]}
                                          isSelected={false}
                                          onChange={[Function]}
                                          record={
                                            Object {
                                              "end": undefined,
                                              "formats": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "replacements": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "start": undefined,
                                              "text": "Secondary text #1",
                                            }
                                          }
                                          speak={[Function]}
                                        >
                                          <Autocomplete
                                            blockName=""
                                            completers={Array []}
                                            debouncedSpeak={[Function]}
                                            instanceId={89}
                                            isSelected={false}
                                            onChange={[Function]}
                                            record={
                                              Object {
                                                "end": undefined,
                                                "formats": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "replacements": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "start": undefined,
                                                "text": "Secondary text #1",
                                              }
                                            }
                                            speak={[Function]}
                                          >
                                            <bound Editable
                                              aria-activedescendant={null}
                                              aria-owns={null}
                                              onKeyDown={[Function]}
                                            >
                                              <h3
                                                aria-activedescendant={null}
                                                aria-label="Secondary text"
                                                aria-multiline={true}
                                                aria-owns={null}
                                                className="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                                contentEditable={true}
                                                onBlur={[Function]}
                                                onCompositionEnd={[Function]}
                                                onCompositionStart={[Function]}
                                                onFocus={[Function]}
                                                onInput={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseUp={[Function]}
                                                onPaste={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchStart={[Function]}
                                                role="textbox"
                                                style={
                                                  Object {
                                                    "whiteSpace": "pre-wrap",
                                                  }
                                                }
                                                suppressContentEditableWarning={true}
                                              />
                                            </bound Editable>
                                          </Autocomplete>
                                        </WithInstanceId(Autocomplete)>
                                      </WithSpokenMessages(WithInstanceId(Autocomplete))>
                                    </Component>
                                  </WithBlockEditContext(Component)>
                                </RichText>
                              </WithFormatTypes>
                            </WithSafeTimeout(WithFormatTypes)>
                          </ForwardRef>
                        </ForwardRef(RichTextWrapper)>
                      </div>
                    </CardPrimary>
                    <CardSupportingText
                      cardIndex={0}
                      contentLayout="text-under-media"
                      isEditMode={true}
                      setter={[Function]}
                      supportingText="Supporting text #1"
                    >
                      <ForwardRef(RichTextWrapper)
                        className="mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                        onChange={[Function]}
                        placeholder="Supporting text"
                        tagName="div"
                        value="Supporting text #1"
                      >
                        <ForwardRef
                          __unstableDidAutomaticChange={false}
                          __unstableInputRule={[Function]}
                          __unstableIsCaretWithinFormattedText={false}
                          __unstableIsSelected={false}
                          __unstableMarkAutomaticChange={[Function]}
                          __unstableOnCreateUndoLevel={[Function]}
                          __unstableOnEnterFormattedText={[Function]}
                          __unstableOnExitFormattedText={[Function]}
                          blockIsSelected={false}
                          className="block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                          clientId={null}
                          disabled={false}
                          identifier={90}
                          onChange={[Function]}
                          onDelete={[Function]}
                          onEnter={[Function]}
                          onPaste={[Function]}
                          onSelectionChange={[Function]}
                          placeholder="Supporting text"
                          tagName="div"
                          value="Supporting text #1"
                        >
                          <WithSafeTimeout(WithFormatTypes)
                            __unstableDidAutomaticChange={false}
                            __unstableInputRule={[Function]}
                            __unstableIsCaretWithinFormattedText={false}
                            __unstableIsSelected={false}
                            __unstableMarkAutomaticChange={[Function]}
                            __unstableOnCreateUndoLevel={[Function]}
                            __unstableOnEnterFormattedText={[Function]}
                            __unstableOnExitFormattedText={[Function]}
                            blockIsSelected={false}
                            className="block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                            clientId={null}
                            disabled={false}
                            forwardedRef={
                              Object {
                                "current": <div
                                  aria-label="Supporting text"
                                  aria-multiline="true"
                                  class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                  contenteditable="true"
                                  role="textbox"
                                  style="white-space: pre-wrap;"
                                >
                                  Supporting text #1
                                </div>,
                              }
                            }
                            identifier={90}
                            onChange={[Function]}
                            onDelete={[Function]}
                            onEnter={[Function]}
                            onPaste={[Function]}
                            onSelectionChange={[Function]}
                            placeholder="Supporting text"
                            tagName="div"
                            value="Supporting text #1"
                          >
                            <WithFormatTypes
                              __unstableDidAutomaticChange={false}
                              __unstableInputRule={[Function]}
                              __unstableIsCaretWithinFormattedText={false}
                              __unstableIsSelected={false}
                              __unstableMarkAutomaticChange={[Function]}
                              __unstableOnCreateUndoLevel={[Function]}
                              __unstableOnEnterFormattedText={[Function]}
                              __unstableOnExitFormattedText={[Function]}
                              blockIsSelected={false}
                              className="block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                              clearTimeout={[Function]}
                              clientId={null}
                              disabled={false}
                              forwardedRef={
                                Object {
                                  "current": <div
                                    aria-label="Supporting text"
                                    aria-multiline="true"
                                    class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                    contenteditable="true"
                                    role="textbox"
                                    style="white-space: pre-wrap;"
                                  >
                                    Supporting text #1
                                  </div>,
                                }
                              }
                              identifier={90}
                              onChange={[Function]}
                              onDelete={[Function]}
                              onEnter={[Function]}
                              onPaste={[Function]}
                              onSelectionChange={[Function]}
                              placeholder="Supporting text"
                              setTimeout={[Function]}
                              tagName="div"
                              value="Supporting text #1"
                            >
                              <RichText
                                __unstableDidAutomaticChange={false}
                                __unstableInputRule={[Function]}
                                __unstableIsCaretWithinFormattedText={false}
                                __unstableIsSelected={false}
                                __unstableMarkAutomaticChange={[Function]}
                                __unstableOnCreateUndoLevel={[Function]}
                                __unstableOnEnterFormattedText={[Function]}
                                __unstableOnExitFormattedText={[Function]}
                                blockIsSelected={false}
                                className="block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                clearTimeout={[Function]}
                                clientId={null}
                                disabled={false}
                                format="string"
                                formatTypes={Array []}
                                forwardedRef={
                                  Object {
                                    "current": <div
                                      aria-label="Supporting text"
                                      aria-multiline="true"
                                      class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                      contenteditable="true"
                                      role="textbox"
                                      style="white-space: pre-wrap;"
                                    >
                                      Supporting text #1
                                    </div>,
                                  }
                                }
                                identifier={90}
                                onChange={[Function]}
                                onDelete={[Function]}
                                onEnter={[Function]}
                                onPaste={[Function]}
                                onSelectionChange={[Function]}
                                placeholder="Supporting text"
                                setTimeout={[Function]}
                                tagName="div"
                                value="Supporting text #1"
                              >
                                <BoundaryStyle
                                  forwardedRef={
                                    Object {
                                      "current": <div
                                        aria-label="Supporting text"
                                        aria-multiline="true"
                                        class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                        contenteditable="true"
                                        role="textbox"
                                        style="white-space: pre-wrap;"
                                      >
                                        Supporting text #1
                                      </div>,
                                    }
                                  }
                                />
                                <InlineWarning
                                  forwardedRef={
                                    Object {
                                      "current": <div
                                        aria-label="Supporting text"
                                        aria-multiline="true"
                                        class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                        contenteditable="true"
                                        role="textbox"
                                        style="white-space: pre-wrap;"
                                      >
                                        Supporting text #1
                                      </div>,
                                    }
                                  }
                                />
                                <WithBlockEditContext(Component)
                                  isSelected={false}
                                  onChange={[Function]}
                                  record={
                                    Object {
                                      "end": undefined,
                                      "formats": Array [
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                      ],
                                      "replacements": Array [
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                      ],
                                      "start": undefined,
                                      "text": "Supporting text #1",
                                    }
                                  }
                                >
                                  <Component
                                    blockName=""
                                    isSelected={false}
                                    onChange={[Function]}
                                    record={
                                      Object {
                                        "end": undefined,
                                        "formats": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "replacements": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "start": undefined,
                                        "text": "Supporting text #1",
                                      }
                                    }
                                  >
                                    <WithSpokenMessages(WithInstanceId(Autocomplete))
                                      blockName=""
                                      completers={Array []}
                                      isSelected={false}
                                      onChange={[Function]}
                                      record={
                                        Object {
                                          "end": undefined,
                                          "formats": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "replacements": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "start": undefined,
                                          "text": "Supporting text #1",
                                        }
                                      }
                                    >
                                      <WithInstanceId(Autocomplete)
                                        blockName=""
                                        completers={Array []}
                                        debouncedSpeak={[Function]}
                                        isSelected={false}
                                        onChange={[Function]}
                                        record={
                                          Object {
                                            "end": undefined,
                                            "formats": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "replacements": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "start": undefined,
                                            "text": "Supporting text #1",
                                          }
                                        }
                                        speak={[Function]}
                                      >
                                        <Autocomplete
                                          blockName=""
                                          completers={Array []}
                                          debouncedSpeak={[Function]}
                                          instanceId={90}
                                          isSelected={false}
                                          onChange={[Function]}
                                          record={
                                            Object {
                                              "end": undefined,
                                              "formats": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "replacements": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "start": undefined,
                                              "text": "Supporting text #1",
                                            }
                                          }
                                          speak={[Function]}
                                        >
                                          <bound Editable
                                            aria-activedescendant={null}
                                            aria-owns={null}
                                            onKeyDown={[Function]}
                                          >
                                            <div
                                              aria-activedescendant={null}
                                              aria-label="Supporting text"
                                              aria-multiline={true}
                                              aria-owns={null}
                                              className="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                              contentEditable={true}
                                              onBlur={[Function]}
                                              onCompositionEnd={[Function]}
                                              onCompositionStart={[Function]}
                                              onFocus={[Function]}
                                              onInput={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseUp={[Function]}
                                              onPaste={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchStart={[Function]}
                                              role="textbox"
                                              style={
                                                Object {
                                                  "whiteSpace": "pre-wrap",
                                                }
                                              }
                                              suppressContentEditableWarning={true}
                                            />
                                          </bound Editable>
                                        </Autocomplete>
                                      </WithInstanceId(Autocomplete)>
                                    </WithSpokenMessages(WithInstanceId(Autocomplete))>
                                  </Component>
                                </WithBlockEditContext(Component)>
                              </RichText>
                            </WithFormatTypes>
                          </WithSafeTimeout(WithFormatTypes)>
                        </ForwardRef>
                      </ForwardRef(RichTextWrapper)>
                    </CardSupportingText>
                  </div>
                  <CardActions
                    cardIndex={0}
                    displaySecondaryActionButton={false}
                    isEditMode={true}
                    primaryActionButtonLabel="Button text #1-1"
                    primaryActionButtonNewTab={false}
                    primaryActionButtonNoFollow={false}
                    primaryActionButtonUrl=""
                    secondaryActionButtonLabel="Button text #1-2"
                    secondaryActionButtonNewTab={false}
                    secondaryActionButtonNoFollow={false}
                    secondaryActionButtonUrl=""
                    setter={[Function]}
                  >
                    <CardActionsEdit
                      cardIndex={0}
                      displaySecondaryActionButton={false}
                      primaryActionButtonLabel="Button text #1-1"
                      primaryActionButtonNewTab={false}
                      primaryActionButtonNoFollow={false}
                      primaryActionButtonUrl=""
                      secondaryActionButtonLabel="Button text #1-2"
                      secondaryActionButtonNewTab={false}
                      secondaryActionButtonNoFollow={false}
                      secondaryActionButtonUrl=""
                      setter={[Function]}
                    >
                      <div
                        className="mdc-card__actions"
                      >
                        <div
                          className="mdc-card__action-buttons"
                        >
                          <div
                            onFocus={[Function]}
                          >
                            <CardActionButton
                              isEditMode={true}
                              isFocused={false}
                              label="Button text #1-1"
                              newTab={false}
                              noFollow={false}
                              onChangeLabel={[Function]}
                              onChangeNewTab={[Function]}
                              onChangeNoFollow={[Function]}
                              onChangeUrl={[Function]}
                              onPopupClose={[Function]}
                              onPopupFocusOutside={[Function]}
                              url=""
                            >
                              <button
                                className="mdc-button mdc-card__action mdc-card__action--button"
                              >
                                <span
                                  className="mdc-button__ripple"
                                />
                                <ForwardRef(RichTextWrapper)
                                  onChange={[Function]}
                                  placeholder="Button text"
                                  tagName="div"
                                  value="Button text #1-1"
                                >
                                  <ForwardRef
                                    __unstableDidAutomaticChange={false}
                                    __unstableInputRule={[Function]}
                                    __unstableIsCaretWithinFormattedText={false}
                                    __unstableIsSelected={false}
                                    __unstableMarkAutomaticChange={[Function]}
                                    __unstableOnCreateUndoLevel={[Function]}
                                    __unstableOnEnterFormattedText={[Function]}
                                    __unstableOnExitFormattedText={[Function]}
                                    blockIsSelected={false}
                                    className="block-editor-rich-text__editable"
                                    clientId={null}
                                    disabled={false}
                                    identifier={91}
                                    onChange={[Function]}
                                    onDelete={[Function]}
                                    onEnter={[Function]}
                                    onPaste={[Function]}
                                    onSelectionChange={[Function]}
                                    placeholder="Button text"
                                    tagName="div"
                                    value="Button text #1-1"
                                  >
                                    <WithSafeTimeout(WithFormatTypes)
                                      __unstableDidAutomaticChange={false}
                                      __unstableInputRule={[Function]}
                                      __unstableIsCaretWithinFormattedText={false}
                                      __unstableIsSelected={false}
                                      __unstableMarkAutomaticChange={[Function]}
                                      __unstableOnCreateUndoLevel={[Function]}
                                      __unstableOnEnterFormattedText={[Function]}
                                      __unstableOnExitFormattedText={[Function]}
                                      blockIsSelected={false}
                                      className="block-editor-rich-text__editable"
                                      clientId={null}
                                      disabled={false}
                                      forwardedRef={
                                        Object {
                                          "current": <div
                                            aria-label="Button text"
                                            aria-multiline="true"
                                            class="rich-text block-editor-rich-text__editable"
                                            contenteditable="true"
                                            role="textbox"
                                            style="white-space: pre-wrap;"
                                          >
                                            Button text #1-1
                                          </div>,
                                        }
                                      }
                                      identifier={91}
                                      onChange={[Function]}
                                      onDelete={[Function]}
                                      onEnter={[Function]}
                                      onPaste={[Function]}
                                      onSelectionChange={[Function]}
                                      placeholder="Button text"
                                      tagName="div"
                                      value="Button text #1-1"
                                    >
                                      <WithFormatTypes
                                        __unstableDidAutomaticChange={false}
                                        __unstableInputRule={[Function]}
                                        __unstableIsCaretWithinFormattedText={false}
                                        __unstableIsSelected={false}
                                        __unstableMarkAutomaticChange={[Function]}
                                        __unstableOnCreateUndoLevel={[Function]}
                                        __unstableOnEnterFormattedText={[Function]}
                                        __unstableOnExitFormattedText={[Function]}
                                        blockIsSelected={false}
                                        className="block-editor-rich-text__editable"
                                        clearTimeout={[Function]}
                                        clientId={null}
                                        disabled={false}
                                        forwardedRef={
                                          Object {
                                            "current": <div
                                              aria-label="Button text"
                                              aria-multiline="true"
                                              class="rich-text block-editor-rich-text__editable"
                                              contenteditable="true"
                                              role="textbox"
                                              style="white-space: pre-wrap;"
                                            >
                                              Button text #1-1
                                            </div>,
                                          }
                                        }
                                        identifier={91}
                                        onChange={[Function]}
                                        onDelete={[Function]}
                                        onEnter={[Function]}
                                        onPaste={[Function]}
                                        onSelectionChange={[Function]}
                                        placeholder="Button text"
                                        setTimeout={[Function]}
                                        tagName="div"
                                        value="Button text #1-1"
                                      >
                                        <RichText
                                          __unstableDidAutomaticChange={false}
                                          __unstableInputRule={[Function]}
                                          __unstableIsCaretWithinFormattedText={false}
                                          __unstableIsSelected={false}
                                          __unstableMarkAutomaticChange={[Function]}
                                          __unstableOnCreateUndoLevel={[Function]}
                                          __unstableOnEnterFormattedText={[Function]}
                                          __unstableOnExitFormattedText={[Function]}
                                          blockIsSelected={false}
                                          className="block-editor-rich-text__editable"
                                          clearTimeout={[Function]}
                                          clientId={null}
                                          disabled={false}
                                          format="string"
                                          formatTypes={Array []}
                                          forwardedRef={
                                            Object {
                                              "current": <div
                                                aria-label="Button text"
                                                aria-multiline="true"
                                                class="rich-text block-editor-rich-text__editable"
                                                contenteditable="true"
                                                role="textbox"
                                                style="white-space: pre-wrap;"
                                              >
                                                Button text #1-1
                                              </div>,
                                            }
                                          }
                                          identifier={91}
                                          onChange={[Function]}
                                          onDelete={[Function]}
                                          onEnter={[Function]}
                                          onPaste={[Function]}
                                          onSelectionChange={[Function]}
                                          placeholder="Button text"
                                          setTimeout={[Function]}
                                          tagName="div"
                                          value="Button text #1-1"
                                        >
                                          <BoundaryStyle
                                            forwardedRef={
                                              Object {
                                                "current": <div
                                                  aria-label="Button text"
                                                  aria-multiline="true"
                                                  class="rich-text block-editor-rich-text__editable"
                                                  contenteditable="true"
                                                  role="textbox"
                                                  style="white-space: pre-wrap;"
                                                >
                                                  Button text #1-1
                                                </div>,
                                              }
                                            }
                                          />
                                          <InlineWarning
                                            forwardedRef={
                                              Object {
                                                "current": <div
                                                  aria-label="Button text"
                                                  aria-multiline="true"
                                                  class="rich-text block-editor-rich-text__editable"
                                                  contenteditable="true"
                                                  role="textbox"
                                                  style="white-space: pre-wrap;"
                                                >
                                                  Button text #1-1
                                                </div>,
                                              }
                                            }
                                          />
                                          <WithBlockEditContext(Component)
                                            isSelected={false}
                                            onChange={[Function]}
                                            record={
                                              Object {
                                                "end": undefined,
                                                "formats": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "replacements": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "start": undefined,
                                                "text": "Button text #1-1",
                                              }
                                            }
                                          >
                                            <Component
                                              blockName=""
                                              isSelected={false}
                                              onChange={[Function]}
                                              record={
                                                Object {
                                                  "end": undefined,
                                                  "formats": Array [
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                  ],
                                                  "replacements": Array [
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                  ],
                                                  "start": undefined,
                                                  "text": "Button text #1-1",
                                                }
                                              }
                                            >
                                              <WithSpokenMessages(WithInstanceId(Autocomplete))
                                                blockName=""
                                                completers={Array []}
                                                isSelected={false}
                                                onChange={[Function]}
                                                record={
                                                  Object {
                                                    "end": undefined,
                                                    "formats": Array [
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                    ],
                                                    "replacements": Array [
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                    ],
                                                    "start": undefined,
                                                    "text": "Button text #1-1",
                                                  }
                                                }
                                              >
                                                <WithInstanceId(Autocomplete)
                                                  blockName=""
                                                  completers={Array []}
                                                  debouncedSpeak={[Function]}
                                                  isSelected={false}
                                                  onChange={[Function]}
                                                  record={
                                                    Object {
                                                      "end": undefined,
                                                      "formats": Array [
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                      ],
                                                      "replacements": Array [
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                      ],
                                                      "start": undefined,
                                                      "text": "Button text #1-1",
                                                    }
                                                  }
                                                  speak={[Function]}
                                                >
                                                  <Autocomplete
                                                    blockName=""
                                                    completers={Array []}
                                                    debouncedSpeak={[Function]}
                                                    instanceId={91}
                                                    isSelected={false}
                                                    onChange={[Function]}
                                                    record={
                                                      Object {
                                                        "end": undefined,
                                                        "formats": Array [
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                        ],
                                                        "replacements": Array [
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                        ],
                                                        "start": undefined,
                                                        "text": "Button text #1-1",
                                                      }
                                                    }
                                                    speak={[Function]}
                                                  >
                                                    <bound Editable
                                                      aria-activedescendant={null}
                                                      aria-owns={null}
                                                      onKeyDown={[Function]}
                                                    >
                                                      <div
                                                        aria-activedescendant={null}
                                                        aria-label="Button text"
                                                        aria-multiline={true}
                                                        aria-owns={null}
                                                        className="rich-text block-editor-rich-text__editable"
                                                        contentEditable={true}
                                                        onBlur={[Function]}
                                                        onCompositionEnd={[Function]}
                                                        onCompositionStart={[Function]}
                                                        onFocus={[Function]}
                                                        onInput={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseUp={[Function]}
                                                        onPaste={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="textbox"
                                                        style={
                                                          Object {
                                                            "whiteSpace": "pre-wrap",
                                                          }
                                                        }
                                                        suppressContentEditableWarning={true}
                                                      />
                                                    </bound Editable>
                                                  </Autocomplete>
                                                </WithInstanceId(Autocomplete)>
                                              </WithSpokenMessages(WithInstanceId(Autocomplete))>
                                            </Component>
                                          </WithBlockEditContext(Component)>
                                        </RichText>
                                      </WithFormatTypes>
                                    </WithSafeTimeout(WithFormatTypes)>
                                  </ForwardRef>
                                </ForwardRef(RichTextWrapper)>
                              </button>
                            </CardActionButton>
                          </div>
                        </div>
                      </div>
                    </CardActionsEdit>
                  </CardActions>
                </div>
              </VerticalCardLayout>
            </div>
          </div>
          <div
            className="masonry-grid_column"
            key="1"
            style={
              Object {
                "marginLeft": "24px",
                "width": "25%",
              }
            }
          >
            <div
              className="card-container"
              data-card-index={1}
              key="1"
              onFocus={[Function]}
              style={
                Object {
                  "marginBottom": "24px",
                }
              }
            >
              <VerticalCardLayout
                cardIndex={1}
                contentLayout="text-under-media"
                cornerRadius={4}
                displayActions={true}
                displayImage={true}
                displaySecondaryActionButton={false}
                displaySecondaryText={true}
                displaySupportingText={true}
                displayTitle={true}
                imageSourceUrl=""
                isEditMode={true}
                isImageEditMode={false}
                outlined={false}
                primaryActionButtonLabel="Button text #2-1"
                primaryActionButtonNewTab={false}
                primaryActionButtonNoFollow={false}
                primaryActionButtonUrl=""
                secondaryActionButtonLabel="Button text #2-2"
                secondaryActionButtonNewTab={false}
                secondaryActionButtonNoFollow={false}
                secondaryActionButtonUrl=""
                secondaryText="Secondary text #2"
                setAttributes={[MockFunction]}
                setter={[Function]}
                supportingText="Supporting text #2"
                title="Title #2 goes here"
              >
                <div
                  className="mdc-card mtb-card"
                  style={
                    Object {
                      "borderRadius": "4px",
                    }
                  }
                >
                  <div
                    className="mdc-card__primary-action mtb-card__primary-action mdc-ripple-upgraded"
                    tabIndex={0}
                  >
                    <CardImage
                      cardIndex={1}
                      cardPrimaryProps={
                        Object {
                          "cardIndex": 1,
                          "displaySecondaryText": true,
                          "displayTitle": true,
                          "isEditMode": true,
                          "secondaryText": "Secondary text #2",
                          "setter": [Function],
                          "title": "Title #2 goes here",
                        }
                      }
                      contentLayout="text-under-media"
                      displayImage={true}
                      imageSourceUrl=""
                      isEditMode={true}
                      isImageEditMode={false}
                      setter={[Function]}
                      type="16-9"
                    >
                      <CardImageEdit
                        cardIndex={1}
                        cardPrimaryProps={
                          Object {
                            "cardIndex": 1,
                            "displaySecondaryText": true,
                            "displayTitle": true,
                            "isEditMode": true,
                            "secondaryText": "Secondary text #2",
                            "setter": [Function],
                            "title": "Title #2 goes here",
                          }
                        }
                        contentLayout="text-under-media"
                        displayImage={true}
                        imageSourceUrl=""
                        isEditMode={true}
                        isImageEditMode={false}
                        setter={[Function]}
                        type="16-9"
                      >
                        <WithSelect(WithFilters(MediaPlaceholder))
                          accept="image/*"
                          allowedTypes={
                            Array [
                              "image",
                            ]
                          }
                          labels={
                            Object {
                              "title": "Card Image selector",
                            }
                          }
                          multiple={false}
                          onSelect={[Function]}
                        >
                          <Component
                            accept="image/*"
                            allowedTypes={
                              Array [
                                "image",
                              ]
                            }
                            labels={
                              Object {
                                "title": "Card Image selector",
                              }
                            }
                            multiple={false}
                            onSelect={[Function]}
                          >
                            <WithFilters(MediaPlaceholder)
                              accept="image/*"
                              allowedTypes={
                                Array [
                                  "image",
                                ]
                              }
                              labels={
                                Object {
                                  "title": "Card Image selector",
                                }
                              }
                              multiple={false}
                              onSelect={[Function]}
                            >
                              <MediaPlaceholder
                                accept="image/*"
                                allowedTypes={
                                  Array [
                                    "image",
                                  ]
                                }
                                labels={
                                  Object {
                                    "title": "Card Image selector",
                                  }
                                }
                                multiple={false}
                                onSelect={[Function]}
                              >
                                <WithSelect(MediaUploadCheck)
                                  fallback={
                                    <Placeholder
                                      className="block-editor-media-placeholder"
                                      instructions="To edit this block, you need permission to upload media."
                                      label="Card Image selector"
                                    />
                                  }
                                >
                                  <Component
                                    fallback={
                                      <Placeholder
                                        className="block-editor-media-placeholder"
                                        instructions="To edit this block, you need permission to upload media."
                                        label="Card Image selector"
                                      />
                                    }
                                  >
                                    <MediaUploadCheck
                                      fallback={
                                        <Placeholder
                                          className="block-editor-media-placeholder"
                                          instructions="To edit this block, you need permission to upload media."
                                          label="Card Image selector"
                                        />
                                      }
                                      hasUploadPermissions={false}
                                    >
                                      <Placeholder
                                        className="block-editor-media-placeholder"
                                        instructions="To edit this block, you need permission to upload media."
                                        label="Card Image selector"
                                      >
                                        <div
                                          className="components-placeholder block-editor-media-placeholder"
                                        >
                                          <t
                                            onResize={[Function]}
                                          >
                                            <iframe
                                              aria-hidden={true}
                                              aria-label="resize-listener"
                                              frameBorder={0}
                                              src="about:blank"
                                              style={
                                                Object {
                                                  "display": "block",
                                                  "height": "100%",
                                                  "left": 0,
                                                  "opacity": 0,
                                                  "overflow": "hidden",
                                                  "pointerEvents": "none",
                                                  "position": "absolute",
                                                  "top": 0,
                                                  "width": "100%",
                                                  "zIndex": -1,
                                                }
                                              }
                                              tabIndex={-1}
                                            />
                                          </t>
                                          <div
                                            className="components-placeholder__label"
                                          >
                                            <Icon />
                                            Card Image selector
                                          </div>
                                          <div
                                            className="components-placeholder__instructions"
                                          >
                                            To edit this block, you need permission to upload media.
                                          </div>
                                          <div
                                            className="components-placeholder__fieldset"
                                          />
                                        </div>
                                      </Placeholder>
                                    </MediaUploadCheck>
                                  </Component>
                                </WithSelect(MediaUploadCheck)>
                              </MediaPlaceholder>
                            </WithFilters(MediaPlaceholder)>
                          </Component>
                        </WithSelect(WithFilters(MediaPlaceholder))>
                      </CardImageEdit>
                    </CardImage>
                    <CardPrimary
                      cardIndex={1}
                      displaySecondaryText={true}
                      displayTitle={true}
                      isEditMode={true}
                      secondaryText="Secondary text #2"
                      setter={[Function]}
                      title="Title #2 goes here"
                    >
                      <div
                        className="mtb-card__primary"
                      >
                        <ForwardRef(RichTextWrapper)
                          className="mtb-card__title mdc-typography mdc-typography--headline6"
                          onChange={[Function]}
                          place={true}
                          placeholder="Title goes here"
                          tagName="h2"
                          value="Title #2 goes here"
                        >
                          <ForwardRef
                            __unstableDidAutomaticChange={false}
                            __unstableInputRule={[Function]}
                            __unstableIsCaretWithinFormattedText={false}
                            __unstableIsSelected={false}
                            __unstableMarkAutomaticChange={[Function]}
                            __unstableOnCreateUndoLevel={[Function]}
                            __unstableOnEnterFormattedText={[Function]}
                            __unstableOnExitFormattedText={[Function]}
                            blockIsSelected={false}
                            className="block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                            clientId={null}
                            disabled={false}
                            identifier={92}
                            onChange={[Function]}
                            onDelete={[Function]}
                            onEnter={[Function]}
                            onPaste={[Function]}
                            onSelectionChange={[Function]}
                            place={true}
                            placeholder="Title goes here"
                            tagName="h2"
                            value="Title #2 goes here"
                          >
                            <WithSafeTimeout(WithFormatTypes)
                              __unstableDidAutomaticChange={false}
                              __unstableInputRule={[Function]}
                              __unstableIsCaretWithinFormattedText={false}
                              __unstableIsSelected={false}
                              __unstableMarkAutomaticChange={[Function]}
                              __unstableOnCreateUndoLevel={[Function]}
                              __unstableOnEnterFormattedText={[Function]}
                              __unstableOnExitFormattedText={[Function]}
                              blockIsSelected={false}
                              className="block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                              clientId={null}
                              disabled={false}
                              forwardedRef={
                                Object {
                                  "current": <h2
                                    aria-label="Title goes here"
                                    aria-multiline="true"
                                    class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                    contenteditable="true"
                                    role="textbox"
                                    style="white-space: pre-wrap;"
                                  >
                                    Title #2 goes here
                                  </h2>,
                                }
                              }
                              identifier={92}
                              onChange={[Function]}
                              onDelete={[Function]}
                              onEnter={[Function]}
                              onPaste={[Function]}
                              onSelectionChange={[Function]}
                              place={true}
                              placeholder="Title goes here"
                              tagName="h2"
                              value="Title #2 goes here"
                            >
                              <WithFormatTypes
                                __unstableDidAutomaticChange={false}
                                __unstableInputRule={[Function]}
                                __unstableIsCaretWithinFormattedText={false}
                                __unstableIsSelected={false}
                                __unstableMarkAutomaticChange={[Function]}
                                __unstableOnCreateUndoLevel={[Function]}
                                __unstableOnEnterFormattedText={[Function]}
                                __unstableOnExitFormattedText={[Function]}
                                blockIsSelected={false}
                                className="block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                clearTimeout={[Function]}
                                clientId={null}
                                disabled={false}
                                forwardedRef={
                                  Object {
                                    "current": <h2
                                      aria-label="Title goes here"
                                      aria-multiline="true"
                                      class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                      contenteditable="true"
                                      role="textbox"
                                      style="white-space: pre-wrap;"
                                    >
                                      Title #2 goes here
                                    </h2>,
                                  }
                                }
                                identifier={92}
                                onChange={[Function]}
                                onDelete={[Function]}
                                onEnter={[Function]}
                                onPaste={[Function]}
                                onSelectionChange={[Function]}
                                place={true}
                                placeholder="Title goes here"
                                setTimeout={[Function]}
                                tagName="h2"
                                value="Title #2 goes here"
                              >
                                <RichText
                                  __unstableDidAutomaticChange={false}
                                  __unstableInputRule={[Function]}
                                  __unstableIsCaretWithinFormattedText={false}
                                  __unstableIsSelected={false}
                                  __unstableMarkAutomaticChange={[Function]}
                                  __unstableOnCreateUndoLevel={[Function]}
                                  __unstableOnEnterFormattedText={[Function]}
                                  __unstableOnExitFormattedText={[Function]}
                                  blockIsSelected={false}
                                  className="block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                  clearTimeout={[Function]}
                                  clientId={null}
                                  disabled={false}
                                  format="string"
                                  formatTypes={Array []}
                                  forwardedRef={
                                    Object {
                                      "current": <h2
                                        aria-label="Title goes here"
                                        aria-multiline="true"
                                        class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                        contenteditable="true"
                                        role="textbox"
                                        style="white-space: pre-wrap;"
                                      >
                                        Title #2 goes here
                                      </h2>,
                                    }
                                  }
                                  identifier={92}
                                  onChange={[Function]}
                                  onDelete={[Function]}
                                  onEnter={[Function]}
                                  onPaste={[Function]}
                                  onSelectionChange={[Function]}
                                  place={true}
                                  placeholder="Title goes here"
                                  setTimeout={[Function]}
                                  tagName="h2"
                                  value="Title #2 goes here"
                                >
                                  <BoundaryStyle
                                    forwardedRef={
                                      Object {
                                        "current": <h2
                                          aria-label="Title goes here"
                                          aria-multiline="true"
                                          class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                          contenteditable="true"
                                          role="textbox"
                                          style="white-space: pre-wrap;"
                                        >
                                          Title #2 goes here
                                        </h2>,
                                      }
                                    }
                                  />
                                  <InlineWarning
                                    forwardedRef={
                                      Object {
                                        "current": <h2
                                          aria-label="Title goes here"
                                          aria-multiline="true"
                                          class="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                          contenteditable="true"
                                          role="textbox"
                                          style="white-space: pre-wrap;"
                                        >
                                          Title #2 goes here
                                        </h2>,
                                      }
                                    }
                                  />
                                  <WithBlockEditContext(Component)
                                    isSelected={false}
                                    onChange={[Function]}
                                    record={
                                      Object {
                                        "end": undefined,
                                        "formats": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "replacements": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "start": undefined,
                                        "text": "Title #2 goes here",
                                      }
                                    }
                                  >
                                    <Component
                                      blockName=""
                                      isSelected={false}
                                      onChange={[Function]}
                                      record={
                                        Object {
                                          "end": undefined,
                                          "formats": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "replacements": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "start": undefined,
                                          "text": "Title #2 goes here",
                                        }
                                      }
                                    >
                                      <WithSpokenMessages(WithInstanceId(Autocomplete))
                                        blockName=""
                                        completers={Array []}
                                        isSelected={false}
                                        onChange={[Function]}
                                        record={
                                          Object {
                                            "end": undefined,
                                            "formats": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "replacements": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "start": undefined,
                                            "text": "Title #2 goes here",
                                          }
                                        }
                                      >
                                        <WithInstanceId(Autocomplete)
                                          blockName=""
                                          completers={Array []}
                                          debouncedSpeak={[Function]}
                                          isSelected={false}
                                          onChange={[Function]}
                                          record={
                                            Object {
                                              "end": undefined,
                                              "formats": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "replacements": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "start": undefined,
                                              "text": "Title #2 goes here",
                                            }
                                          }
                                          speak={[Function]}
                                        >
                                          <Autocomplete
                                            blockName=""
                                            completers={Array []}
                                            debouncedSpeak={[Function]}
                                            instanceId={92}
                                            isSelected={false}
                                            onChange={[Function]}
                                            record={
                                              Object {
                                                "end": undefined,
                                                "formats": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "replacements": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "start": undefined,
                                                "text": "Title #2 goes here",
                                              }
                                            }
                                            speak={[Function]}
                                          >
                                            <bound Editable
                                              aria-activedescendant={null}
                                              aria-owns={null}
                                              onKeyDown={[Function]}
                                            >
                                              <h2
                                                aria-activedescendant={null}
                                                aria-label="Title goes here"
                                                aria-multiline={true}
                                                aria-owns={null}
                                                className="rich-text block-editor-rich-text__editable mtb-card__title mdc-typography mdc-typography--headline6"
                                                contentEditable={true}
                                                onBlur={[Function]}
                                                onCompositionEnd={[Function]}
                                                onCompositionStart={[Function]}
                                                onFocus={[Function]}
                                                onInput={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseUp={[Function]}
                                                onPaste={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchStart={[Function]}
                                                role="textbox"
                                                style={
                                                  Object {
                                                    "whiteSpace": "pre-wrap",
                                                  }
                                                }
                                                suppressContentEditableWarning={true}
                                              />
                                            </bound Editable>
                                          </Autocomplete>
                                        </WithInstanceId(Autocomplete)>
                                      </WithSpokenMessages(WithInstanceId(Autocomplete))>
                                    </Component>
                                  </WithBlockEditContext(Component)>
                                </RichText>
                              </WithFormatTypes>
                            </WithSafeTimeout(WithFormatTypes)>
                          </ForwardRef>
                        </ForwardRef(RichTextWrapper)>
                        <ForwardRef(RichTextWrapper)
                          className="mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                          onChange={[Function]}
                          placeholder="Secondary text"
                          tagName="h3"
                          value="Secondary text #2"
                        >
                          <ForwardRef
                            __unstableDidAutomaticChange={false}
                            __unstableInputRule={[Function]}
                            __unstableIsCaretWithinFormattedText={false}
                            __unstableIsSelected={false}
                            __unstableMarkAutomaticChange={[Function]}
                            __unstableOnCreateUndoLevel={[Function]}
                            __unstableOnEnterFormattedText={[Function]}
                            __unstableOnExitFormattedText={[Function]}
                            blockIsSelected={false}
                            className="block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                            clientId={null}
                            disabled={false}
                            identifier={93}
                            onChange={[Function]}
                            onDelete={[Function]}
                            onEnter={[Function]}
                            onPaste={[Function]}
                            onSelectionChange={[Function]}
                            placeholder="Secondary text"
                            tagName="h3"
                            value="Secondary text #2"
                          >
                            <WithSafeTimeout(WithFormatTypes)
                              __unstableDidAutomaticChange={false}
                              __unstableInputRule={[Function]}
                              __unstableIsCaretWithinFormattedText={false}
                              __unstableIsSelected={false}
                              __unstableMarkAutomaticChange={[Function]}
                              __unstableOnCreateUndoLevel={[Function]}
                              __unstableOnEnterFormattedText={[Function]}
                              __unstableOnExitFormattedText={[Function]}
                              blockIsSelected={false}
                              className="block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                              clientId={null}
                              disabled={false}
                              forwardedRef={
                                Object {
                                  "current": <h3
                                    aria-label="Secondary text"
                                    aria-multiline="true"
                                    class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                    contenteditable="true"
                                    role="textbox"
                                    style="white-space: pre-wrap;"
                                  >
                                    Secondary text #2
                                  </h3>,
                                }
                              }
                              identifier={93}
                              onChange={[Function]}
                              onDelete={[Function]}
                              onEnter={[Function]}
                              onPaste={[Function]}
                              onSelectionChange={[Function]}
                              placeholder="Secondary text"
                              tagName="h3"
                              value="Secondary text #2"
                            >
                              <WithFormatTypes
                                __unstableDidAutomaticChange={false}
                                __unstableInputRule={[Function]}
                                __unstableIsCaretWithinFormattedText={false}
                                __unstableIsSelected={false}
                                __unstableMarkAutomaticChange={[Function]}
                                __unstableOnCreateUndoLevel={[Function]}
                                __unstableOnEnterFormattedText={[Function]}
                                __unstableOnExitFormattedText={[Function]}
                                blockIsSelected={false}
                                className="block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                clearTimeout={[Function]}
                                clientId={null}
                                disabled={false}
                                forwardedRef={
                                  Object {
                                    "current": <h3
                                      aria-label="Secondary text"
                                      aria-multiline="true"
                                      class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                      contenteditable="true"
                                      role="textbox"
                                      style="white-space: pre-wrap;"
                                    >
                                      Secondary text #2
                                    </h3>,
                                  }
                                }
                                identifier={93}
                                onChange={[Function]}
                                onDelete={[Function]}
                                onEnter={[Function]}
                                onPaste={[Function]}
                                onSelectionChange={[Function]}
                                placeholder="Secondary text"
                                setTimeout={[Function]}
                                tagName="h3"
                                value="Secondary text #2"
                              >
                                <RichText
                                  __unstableDidAutomaticChange={false}
                                  __unstableInputRule={[Function]}
                                  __unstableIsCaretWithinFormattedText={false}
                                  __unstableIsSelected={false}
                                  __unstableMarkAutomaticChange={[Function]}
                                  __unstableOnCreateUndoLevel={[Function]}
                                  __unstableOnEnterFormattedText={[Function]}
                                  __unstableOnExitFormattedText={[Function]}
                                  blockIsSelected={false}
                                  className="block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                  clearTimeout={[Function]}
                                  clientId={null}
                                  disabled={false}
                                  format="string"
                                  formatTypes={Array []}
                                  forwardedRef={
                                    Object {
                                      "current": <h3
                                        aria-label="Secondary text"
                                        aria-multiline="true"
                                        class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                        contenteditable="true"
                                        role="textbox"
                                        style="white-space: pre-wrap;"
                                      >
                                        Secondary text #2
                                      </h3>,
                                    }
                                  }
                                  identifier={93}
                                  onChange={[Function]}
                                  onDelete={[Function]}
                                  onEnter={[Function]}
                                  onPaste={[Function]}
                                  onSelectionChange={[Function]}
                                  placeholder="Secondary text"
                                  setTimeout={[Function]}
                                  tagName="h3"
                                  value="Secondary text #2"
                                >
                                  <BoundaryStyle
                                    forwardedRef={
                                      Object {
                                        "current": <h3
                                          aria-label="Secondary text"
                                          aria-multiline="true"
                                          class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                          contenteditable="true"
                                          role="textbox"
                                          style="white-space: pre-wrap;"
                                        >
                                          Secondary text #2
                                        </h3>,
                                      }
                                    }
                                  />
                                  <InlineWarning
                                    forwardedRef={
                                      Object {
                                        "current": <h3
                                          aria-label="Secondary text"
                                          aria-multiline="true"
                                          class="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                          contenteditable="true"
                                          role="textbox"
                                          style="white-space: pre-wrap;"
                                        >
                                          Secondary text #2
                                        </h3>,
                                      }
                                    }
                                  />
                                  <WithBlockEditContext(Component)
                                    isSelected={false}
                                    onChange={[Function]}
                                    record={
                                      Object {
                                        "end": undefined,
                                        "formats": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "replacements": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "start": undefined,
                                        "text": "Secondary text #2",
                                      }
                                    }
                                  >
                                    <Component
                                      blockName=""
                                      isSelected={false}
                                      onChange={[Function]}
                                      record={
                                        Object {
                                          "end": undefined,
                                          "formats": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "replacements": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "start": undefined,
                                          "text": "Secondary text #2",
                                        }
                                      }
                                    >
                                      <WithSpokenMessages(WithInstanceId(Autocomplete))
                                        blockName=""
                                        completers={Array []}
                                        isSelected={false}
                                        onChange={[Function]}
                                        record={
                                          Object {
                                            "end": undefined,
                                            "formats": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "replacements": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "start": undefined,
                                            "text": "Secondary text #2",
                                          }
                                        }
                                      >
                                        <WithInstanceId(Autocomplete)
                                          blockName=""
                                          completers={Array []}
                                          debouncedSpeak={[Function]}
                                          isSelected={false}
                                          onChange={[Function]}
                                          record={
                                            Object {
                                              "end": undefined,
                                              "formats": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "replacements": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "start": undefined,
                                              "text": "Secondary text #2",
                                            }
                                          }
                                          speak={[Function]}
                                        >
                                          <Autocomplete
                                            blockName=""
                                            completers={Array []}
                                            debouncedSpeak={[Function]}
                                            instanceId={93}
                                            isSelected={false}
                                            onChange={[Function]}
                                            record={
                                              Object {
                                                "end": undefined,
                                                "formats": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "replacements": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "start": undefined,
                                                "text": "Secondary text #2",
                                              }
                                            }
                                            speak={[Function]}
                                          >
                                            <bound Editable
                                              aria-activedescendant={null}
                                              aria-owns={null}
                                              onKeyDown={[Function]}
                                            >
                                              <h3
                                                aria-activedescendant={null}
                                                aria-label="Secondary text"
                                                aria-multiline={true}
                                                aria-owns={null}
                                                className="rich-text block-editor-rich-text__editable mtb-card__secondary-text mdc-typography mdc-typography--subtitle2"
                                                contentEditable={true}
                                                onBlur={[Function]}
                                                onCompositionEnd={[Function]}
                                                onCompositionStart={[Function]}
                                                onFocus={[Function]}
                                                onInput={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseUp={[Function]}
                                                onPaste={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchStart={[Function]}
                                                role="textbox"
                                                style={
                                                  Object {
                                                    "whiteSpace": "pre-wrap",
                                                  }
                                                }
                                                suppressContentEditableWarning={true}
                                              />
                                            </bound Editable>
                                          </Autocomplete>
                                        </WithInstanceId(Autocomplete)>
                                      </WithSpokenMessages(WithInstanceId(Autocomplete))>
                                    </Component>
                                  </WithBlockEditContext(Component)>
                                </RichText>
                              </WithFormatTypes>
                            </WithSafeTimeout(WithFormatTypes)>
                          </ForwardRef>
                        </ForwardRef(RichTextWrapper)>
                      </div>
                    </CardPrimary>
                    <CardSupportingText
                      cardIndex={1}
                      contentLayout="text-under-media"
                      isEditMode={true}
                      setter={[Function]}
                      supportingText="Supporting text #2"
                    >
                      <ForwardRef(RichTextWrapper)
                        className="mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                        onChange={[Function]}
                        placeholder="Supporting text"
                        tagName="div"
                        value="Supporting text #2"
                      >
                        <ForwardRef
                          __unstableDidAutomaticChange={false}
                          __unstableInputRule={[Function]}
                          __unstableIsCaretWithinFormattedText={false}
                          __unstableIsSelected={false}
                          __unstableMarkAutomaticChange={[Function]}
                          __unstableOnCreateUndoLevel={[Function]}
                          __unstableOnEnterFormattedText={[Function]}
                          __unstableOnExitFormattedText={[Function]}
                          blockIsSelected={false}
                          className="block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                          clientId={null}
                          disabled={false}
                          identifier={94}
                          onChange={[Function]}
                          onDelete={[Function]}
                          onEnter={[Function]}
                          onPaste={[Function]}
                          onSelectionChange={[Function]}
                          placeholder="Supporting text"
                          tagName="div"
                          value="Supporting text #2"
                        >
                          <WithSafeTimeout(WithFormatTypes)
                            __unstableDidAutomaticChange={false}
                            __unstableInputRule={[Function]}
                            __unstableIsCaretWithinFormattedText={false}
                            __unstableIsSelected={false}
                            __unstableMarkAutomaticChange={[Function]}
                            __unstableOnCreateUndoLevel={[Function]}
                            __unstableOnEnterFormattedText={[Function]}
                            __unstableOnExitFormattedText={[Function]}
                            blockIsSelected={false}
                            className="block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                            clientId={null}
                            disabled={false}
                            forwardedRef={
                              Object {
                                "current": <div
                                  aria-label="Supporting text"
                                  aria-multiline="true"
                                  class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                  contenteditable="true"
                                  role="textbox"
                                  style="white-space: pre-wrap;"
                                >
                                  Supporting text #2
                                </div>,
                              }
                            }
                            identifier={94}
                            onChange={[Function]}
                            onDelete={[Function]}
                            onEnter={[Function]}
                            onPaste={[Function]}
                            onSelectionChange={[Function]}
                            placeholder="Supporting text"
                            tagName="div"
                            value="Supporting text #2"
                          >
                            <WithFormatTypes
                              __unstableDidAutomaticChange={false}
                              __unstableInputRule={[Function]}
                              __unstableIsCaretWithinFormattedText={false}
                              __unstableIsSelected={false}
                              __unstableMarkAutomaticChange={[Function]}
                              __unstableOnCreateUndoLevel={[Function]}
                              __unstableOnEnterFormattedText={[Function]}
                              __unstableOnExitFormattedText={[Function]}
                              blockIsSelected={false}
                              className="block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                              clearTimeout={[Function]}
                              clientId={null}
                              disabled={false}
                              forwardedRef={
                                Object {
                                  "current": <div
                                    aria-label="Supporting text"
                                    aria-multiline="true"
                                    class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                    contenteditable="true"
                                    role="textbox"
                                    style="white-space: pre-wrap;"
                                  >
                                    Supporting text #2
                                  </div>,
                                }
                              }
                              identifier={94}
                              onChange={[Function]}
                              onDelete={[Function]}
                              onEnter={[Function]}
                              onPaste={[Function]}
                              onSelectionChange={[Function]}
                              placeholder="Supporting text"
                              setTimeout={[Function]}
                              tagName="div"
                              value="Supporting text #2"
                            >
                              <RichText
                                __unstableDidAutomaticChange={false}
                                __unstableInputRule={[Function]}
                                __unstableIsCaretWithinFormattedText={false}
                                __unstableIsSelected={false}
                                __unstableMarkAutomaticChange={[Function]}
                                __unstableOnCreateUndoLevel={[Function]}
                                __unstableOnEnterFormattedText={[Function]}
                                __unstableOnExitFormattedText={[Function]}
                                blockIsSelected={false}
                                className="block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                clearTimeout={[Function]}
                                clientId={null}
                                disabled={false}
                                format="string"
                                formatTypes={Array []}
                                forwardedRef={
                                  Object {
                                    "current": <div
                                      aria-label="Supporting text"
                                      aria-multiline="true"
                                      class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                      contenteditable="true"
                                      role="textbox"
                                      style="white-space: pre-wrap;"
                                    >
                                      Supporting text #2
                                    </div>,
                                  }
                                }
                                identifier={94}
                                onChange={[Function]}
                                onDelete={[Function]}
                                onEnter={[Function]}
                                onPaste={[Function]}
                                onSelectionChange={[Function]}
                                placeholder="Supporting text"
                                setTimeout={[Function]}
                                tagName="div"
                                value="Supporting text #2"
                              >
                                <BoundaryStyle
                                  forwardedRef={
                                    Object {
                                      "current": <div
                                        aria-label="Supporting text"
                                        aria-multiline="true"
                                        class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                        contenteditable="true"
                                        role="textbox"
                                        style="white-space: pre-wrap;"
                                      >
                                        Supporting text #2
                                      </div>,
                                    }
                                  }
                                />
                                <InlineWarning
                                  forwardedRef={
                                    Object {
                                      "current": <div
                                        aria-label="Supporting text"
                                        aria-multiline="true"
                                        class="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                        contenteditable="true"
                                        role="textbox"
                                        style="white-space: pre-wrap;"
                                      >
                                        Supporting text #2
                                      </div>,
                                    }
                                  }
                                />
                                <WithBlockEditContext(Component)
                                  isSelected={false}
                                  onChange={[Function]}
                                  record={
                                    Object {
                                      "end": undefined,
                                      "formats": Array [
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                      ],
                                      "replacements": Array [
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                      ],
                                      "start": undefined,
                                      "text": "Supporting text #2",
                                    }
                                  }
                                >
                                  <Component
                                    blockName=""
                                    isSelected={false}
                                    onChange={[Function]}
                                    record={
                                      Object {
                                        "end": undefined,
                                        "formats": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "replacements": Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                          undefined,
                                        ],
                                        "start": undefined,
                                        "text": "Supporting text #2",
                                      }
                                    }
                                  >
                                    <WithSpokenMessages(WithInstanceId(Autocomplete))
                                      blockName=""
                                      completers={Array []}
                                      isSelected={false}
                                      onChange={[Function]}
                                      record={
                                        Object {
                                          "end": undefined,
                                          "formats": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "replacements": Array [
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                          ],
                                          "start": undefined,
                                          "text": "Supporting text #2",
                                        }
                                      }
                                    >
                                      <WithInstanceId(Autocomplete)
                                        blockName=""
                                        completers={Array []}
                                        debouncedSpeak={[Function]}
                                        isSelected={false}
                                        onChange={[Function]}
                                        record={
                                          Object {
                                            "end": undefined,
                                            "formats": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "replacements": Array [
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                              undefined,
                                            ],
                                            "start": undefined,
                                            "text": "Supporting text #2",
                                          }
                                        }
                                        speak={[Function]}
                                      >
                                        <Autocomplete
                                          blockName=""
                                          completers={Array []}
                                          debouncedSpeak={[Function]}
                                          instanceId={94}
                                          isSelected={false}
                                          onChange={[Function]}
                                          record={
                                            Object {
                                              "end": undefined,
                                              "formats": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "replacements": Array [
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                                undefined,
                                              ],
                                              "start": undefined,
                                              "text": "Supporting text #2",
                                            }
                                          }
                                          speak={[Function]}
                                        >
                                          <bound Editable
                                            aria-activedescendant={null}
                                            aria-owns={null}
                                            onKeyDown={[Function]}
                                          >
                                            <div
                                              aria-activedescendant={null}
                                              aria-label="Supporting text"
                                              aria-multiline={true}
                                              aria-owns={null}
                                              className="rich-text block-editor-rich-text__editable mtb-card__supporting-text mtb-card__supporting-text_text-under-media mdc-typography mdc-typography--body2"
                                              contentEditable={true}
                                              onBlur={[Function]}
                                              onCompositionEnd={[Function]}
                                              onCompositionStart={[Function]}
                                              onFocus={[Function]}
                                              onInput={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseUp={[Function]}
                                              onPaste={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchStart={[Function]}
                                              role="textbox"
                                              style={
                                                Object {
                                                  "whiteSpace": "pre-wrap",
                                                }
                                              }
                                              suppressContentEditableWarning={true}
                                            />
                                          </bound Editable>
                                        </Autocomplete>
                                      </WithInstanceId(Autocomplete)>
                                    </WithSpokenMessages(WithInstanceId(Autocomplete))>
                                  </Component>
                                </WithBlockEditContext(Component)>
                              </RichText>
                            </WithFormatTypes>
                          </WithSafeTimeout(WithFormatTypes)>
                        </ForwardRef>
                      </ForwardRef(RichTextWrapper)>
                    </CardSupportingText>
                  </div>
                  <CardActions
                    cardIndex={1}
                    displaySecondaryActionButton={false}
                    isEditMode={true}
                    primaryActionButtonLabel="Button text #2-1"
                    primaryActionButtonNewTab={false}
                    primaryActionButtonNoFollow={false}
                    primaryActionButtonUrl=""
                    secondaryActionButtonLabel="Button text #2-2"
                    secondaryActionButtonNewTab={false}
                    secondaryActionButtonNoFollow={false}
                    secondaryActionButtonUrl=""
                    setter={[Function]}
                  >
                    <CardActionsEdit
                      cardIndex={1}
                      displaySecondaryActionButton={false}
                      primaryActionButtonLabel="Button text #2-1"
                      primaryActionButtonNewTab={false}
                      primaryActionButtonNoFollow={false}
                      primaryActionButtonUrl=""
                      secondaryActionButtonLabel="Button text #2-2"
                      secondaryActionButtonNewTab={false}
                      secondaryActionButtonNoFollow={false}
                      secondaryActionButtonUrl=""
                      setter={[Function]}
                    >
                      <div
                        className="mdc-card__actions"
                      >
                        <div
                          className="mdc-card__action-buttons"
                        >
                          <div
                            onFocus={[Function]}
                          >
                            <CardActionButton
                              isEditMode={true}
                              isFocused={false}
                              label="Button text #2-1"
                              newTab={false}
                              noFollow={false}
                              onChangeLabel={[Function]}
                              onChangeNewTab={[Function]}
                              onChangeNoFollow={[Function]}
                              onChangeUrl={[Function]}
                              onPopupClose={[Function]}
                              onPopupFocusOutside={[Function]}
                              url=""
                            >
                              <button
                                className="mdc-button mdc-card__action mdc-card__action--button"
                              >
                                <span
                                  className="mdc-button__ripple"
                                />
                                <ForwardRef(RichTextWrapper)
                                  onChange={[Function]}
                                  placeholder="Button text"
                                  tagName="div"
                                  value="Button text #2-1"
                                >
                                  <ForwardRef
                                    __unstableDidAutomaticChange={false}
                                    __unstableInputRule={[Function]}
                                    __unstableIsCaretWithinFormattedText={false}
                                    __unstableIsSelected={false}
                                    __unstableMarkAutomaticChange={[Function]}
                                    __unstableOnCreateUndoLevel={[Function]}
                                    __unstableOnEnterFormattedText={[Function]}
                                    __unstableOnExitFormattedText={[Function]}
                                    blockIsSelected={false}
                                    className="block-editor-rich-text__editable"
                                    clientId={null}
                                    disabled={false}
                                    identifier={95}
                                    onChange={[Function]}
                                    onDelete={[Function]}
                                    onEnter={[Function]}
                                    onPaste={[Function]}
                                    onSelectionChange={[Function]}
                                    placeholder="Button text"
                                    tagName="div"
                                    value="Button text #2-1"
                                  >
                                    <WithSafeTimeout(WithFormatTypes)
                                      __unstableDidAutomaticChange={false}
                                      __unstableInputRule={[Function]}
                                      __unstableIsCaretWithinFormattedText={false}
                                      __unstableIsSelected={false}
                                      __unstableMarkAutomaticChange={[Function]}
                                      __unstableOnCreateUndoLevel={[Function]}
                                      __unstableOnEnterFormattedText={[Function]}
                                      __unstableOnExitFormattedText={[Function]}
                                      blockIsSelected={false}
                                      className="block-editor-rich-text__editable"
                                      clientId={null}
                                      disabled={false}
                                      forwardedRef={
                                        Object {
                                          "current": <div
                                            aria-label="Button text"
                                            aria-multiline="true"
                                            class="rich-text block-editor-rich-text__editable"
                                            contenteditable="true"
                                            role="textbox"
                                            style="white-space: pre-wrap;"
                                          >
                                            Button text #2-1
                                          </div>,
                                        }
                                      }
                                      identifier={95}
                                      onChange={[Function]}
                                      onDelete={[Function]}
                                      onEnter={[Function]}
                                      onPaste={[Function]}
                                      onSelectionChange={[Function]}
                                      placeholder="Button text"
                                      tagName="div"
                                      value="Button text #2-1"
                                    >
                                      <WithFormatTypes
                                        __unstableDidAutomaticChange={false}
                                        __unstableInputRule={[Function]}
                                        __unstableIsCaretWithinFormattedText={false}
                                        __unstableIsSelected={false}
                                        __unstableMarkAutomaticChange={[Function]}
                                        __unstableOnCreateUndoLevel={[Function]}
                                        __unstableOnEnterFormattedText={[Function]}
                                        __unstableOnExitFormattedText={[Function]}
                                        blockIsSelected={false}
                                        className="block-editor-rich-text__editable"
                                        clearTimeout={[Function]}
                                        clientId={null}
                                        disabled={false}
                                        forwardedRef={
                                          Object {
                                            "current": <div
                                              aria-label="Button text"
                                              aria-multiline="true"
                                              class="rich-text block-editor-rich-text__editable"
                                              contenteditable="true"
                                              role="textbox"
                                              style="white-space: pre-wrap;"
                                            >
                                              Button text #2-1
                                            </div>,
                                          }
                                        }
                                        identifier={95}
                                        onChange={[Function]}
                                        onDelete={[Function]}
                                        onEnter={[Function]}
                                        onPaste={[Function]}
                                        onSelectionChange={[Function]}
                                        placeholder="Button text"
                                        setTimeout={[Function]}
                                        tagName="div"
                                        value="Button text #2-1"
                                      >
                                        <RichText
                                          __unstableDidAutomaticChange={false}
                                          __unstableInputRule={[Function]}
                                          __unstableIsCaretWithinFormattedText={false}
                                          __unstableIsSelected={false}
                                          __unstableMarkAutomaticChange={[Function]}
                                          __unstableOnCreateUndoLevel={[Function]}
                                          __unstableOnEnterFormattedText={[Function]}
                                          __unstableOnExitFormattedText={[Function]}
                                          blockIsSelected={false}
                                          className="block-editor-rich-text__editable"
                                          clearTimeout={[Function]}
                                          clientId={null}
                                          disabled={false}
                                          format="string"
                                          formatTypes={Array []}
                                          forwardedRef={
                                            Object {
                                              "current": <div
                                                aria-label="Button text"
                                                aria-multiline="true"
                                                class="rich-text block-editor-rich-text__editable"
                                                contenteditable="true"
                                                role="textbox"
                                                style="white-space: pre-wrap;"
                                              >
                                                Button text #2-1
                                              </div>,
                                            }
                                          }
                                          identifier={95}
                                          onChange={[Function]}
                                          onDelete={[Function]}
                                          onEnter={[Function]}
                                          onPaste={[Function]}
                                          onSelectionChange={[Function]}
                                          placeholder="Button text"
                                          setTimeout={[Function]}
                                          tagName="div"
                                          value="Button text #2-1"
                                        >
                                          <BoundaryStyle
                                            forwardedRef={
                                              Object {
                                                "current": <div
                                                  aria-label="Button text"
                                                  aria-multiline="true"
                                                  class="rich-text block-editor-rich-text__editable"
                                                  contenteditable="true"
                                                  role="textbox"
                                                  style="white-space: pre-wrap;"
                                                >
                                                  Button text #2-1
                                                </div>,
                                              }
                                            }
                                          />
                                          <InlineWarning
                                            forwardedRef={
                                              Object {
                                                "current": <div
                                                  aria-label="Button text"
                                                  aria-multiline="true"
                                                  class="rich-text block-editor-rich-text__editable"
                                                  contenteditable="true"
                                                  role="textbox"
                                                  style="white-space: pre-wrap;"
                                                >
                                                  Button text #2-1
                                                </div>,
                                              }
                                            }
                                          />
                                          <WithBlockEditContext(Component)
                                            isSelected={false}
                                            onChange={[Function]}
                                            record={
                                              Object {
                                                "end": undefined,
                                                "formats": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "replacements": Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ],
                                                "start": undefined,
                                                "text": "Button text #2-1",
                                              }
                                            }
                                          >
                                            <Component
                                              blockName=""
                                              isSelected={false}
                                              onChange={[Function]}
                                              record={
                                                Object {
                                                  "end": undefined,
                                                  "formats": Array [
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                  ],
                                                  "replacements": Array [
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                  ],
                                                  "start": undefined,
                                                  "text": "Button text #2-1",
                                                }
                                              }
                                            >
                                              <WithSpokenMessages(WithInstanceId(Autocomplete))
                                                blockName=""
                                                completers={Array []}
                                                isSelected={false}
                                                onChange={[Function]}
                                                record={
                                                  Object {
                                                    "end": undefined,
                                                    "formats": Array [
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                    ],
                                                    "replacements": Array [
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                    ],
                                                    "start": undefined,
                                                    "text": "Button text #2-1",
                                                  }
                                                }
                                              >
                                                <WithInstanceId(Autocomplete)
                                                  blockName=""
                                                  completers={Array []}
                                                  debouncedSpeak={[Function]}
                                                  isSelected={false}
                                                  onChange={[Function]}
                                                  record={
                                                    Object {
                                                      "end": undefined,
                                                      "formats": Array [
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                      ],
                                                      "replacements": Array [
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                      ],
                                                      "start": undefined,
                                                      "text": "Button text #2-1",
                                                    }
                                                  }
                                                  speak={[Function]}
                                                >
                                                  <Autocomplete
                                                    blockName=""
                                                    completers={Array []}
                                                    debouncedSpeak={[Function]}
                                                    instanceId={95}
                                                    isSelected={false}
                                                    onChange={[Function]}
                                                    record={
                                                      Object {
                                                        "end": undefined,
                                                        "formats": Array [
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                        ],
                                                        "replacements": Array [
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                          undefined,
                                                        ],
                                                        "start": undefined,
                                                        "text": "Button text #2-1",
                                                      }
                                                    }
                                                    speak={[Function]}
                                                  >
                                                    <bound Editable
                                                      aria-activedescendant={null}
                                                      aria-owns={null}
                                                      onKeyDown={[Function]}
                                                    >
                                                      <div
                                                        aria-activedescendant={null}
                                                        aria-label="Button text"
                                                        aria-multiline={true}
                                                        aria-owns={null}
                                                        className="rich-text block-editor-rich-text__editable"
                                                        contentEditable={true}
                                                        onBlur={[Function]}
                                                        onCompositionEnd={[Function]}
                                                        onCompositionStart={[Function]}
                                                        onFocus={[Function]}
                                                        onInput={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseUp={[Function]}
                                                        onPaste={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="textbox"
                                                        style={
                                                          Object {
                                                            "whiteSpace": "pre-wrap",
                                                          }
                                                        }
                                                        suppressContentEditableWarning={true}
                                                      />
                                                    </bound Editable>
                                                  </Autocomplete>
                                                </WithInstanceId(Autocomplete)>
                                              </WithSpokenMessages(WithInstanceId(Autocomplete))>
                                            </Component>
                                          </WithBlockEditContext(Component)>
                                        </RichText>
                                      </WithFormatTypes>
                                    </WithSafeTimeout(WithFormatTypes)>
                                  </ForwardRef>
                                </ForwardRef(RichTextWrapper)>
                              </button>
                            </CardActionButton>
                          </div>
                        </div>
                      </div>
                    </CardActionsEdit>
                  </CardActions>
                </div>
              </VerticalCardLayout>
            </div>
          </div>
        </div>
      </Masonry>
    </Cards>
  </div>
</Edit>
`;
